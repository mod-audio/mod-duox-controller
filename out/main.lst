   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              		.align	1
  14              		.p2align 2,,3
  15              		.syntax unified
  16              		.thumb
  17              		.thumb_func
  18              		.fpu softvfp
  20              	setup_task:
  21              		@ args = 0, pretend = 0, frame = 0
  22              		@ frame_needed = 0, uses_anonymous_args = 0
  23 0000 70B5     		push	{r4, r5, r6, lr}
  24 0002 6949     		ldr	r1, .L8
  25 0004 84B0     		sub	sp, sp, #16
  26 0006 0020     		movs	r0, #0
  27 0008 FFF7FEFF 		bl	screen_image
  28 000c 0020     		movs	r0, #0
  29 000e FFF7FEFF 		bl	hardware_glcds
  30 0012 FFF7FEFF 		bl	uc1701_update
  31 0016 6549     		ldr	r1, .L8+4
  32 0018 0120     		movs	r0, #1
  33 001a FFF7FEFF 		bl	screen_image
  34 001e 0120     		movs	r0, #1
  35 0020 FFF7FEFF 		bl	hardware_glcds
  36 0024 FFF7FEFF 		bl	uc1701_update
  37 0028 FFF7FEFF 		bl	cli_init
  38 002c FFF7FEFF 		bl	comm_init
  39 0030 0022     		movs	r2, #0
  40 0032 0421     		movs	r1, #4
  41 0034 0520     		movs	r0, #5
  42 0036 0025     		movs	r5, #0
  43 0038 FFF7FEFF 		bl	xQueueGenericCreate
  44 003c 0422     		movs	r2, #4
  45 003e 5C4B     		ldr	r3, .L8+8
  46 0040 0395     		str	r5, [sp, #12]
  47 0042 5C49     		ldr	r1, .L8+12
  48 0044 1860     		str	r0, [r3]
  49 0046 2B46     		mov	r3, r5
  50 0048 CDE90155 		strd	r5, r5, [sp, #4]
  51 004c 0092     		str	r2, [sp]
  52 004e 5A48     		ldr	r0, .L8+16
  53 0050 4FF48072 		mov	r2, #256
  54 0054 FFF7FEFF 		bl	xTaskGenericCreate
  55 0058 0322     		movs	r2, #3
  56 005a 0224     		movs	r4, #2
  57 005c 0126     		movs	r6, #1
  58 005e 2B46     		mov	r3, r5
  59 0060 CDE90255 		strd	r5, r5, [sp, #8]
  60 0064 0195     		str	r5, [sp, #4]
  61 0066 0092     		str	r2, [sp]
  62 0068 5449     		ldr	r1, .L8+20
  63 006a 4FF48072 		mov	r2, #256
  64 006e 5448     		ldr	r0, .L8+24
  65 0070 FFF7FEFF 		bl	xTaskGenericCreate
  66 0074 2B46     		mov	r3, r5
  67 0076 CDE90255 		strd	r5, r5, [sp, #8]
  68 007a 0195     		str	r5, [sp, #4]
  69 007c 8022     		movs	r2, #128
  70 007e 5149     		ldr	r1, .L8+28
  71 0080 0094     		str	r4, [sp]
  72 0082 5148     		ldr	r0, .L8+32
  73 0084 FFF7FEFF 		bl	xTaskGenericCreate
  74 0088 2B46     		mov	r3, r5
  75 008a 8022     		movs	r2, #128
  76 008c 4F49     		ldr	r1, .L8+36
  77 008e CDE90255 		strd	r5, r5, [sp, #8]
  78 0092 0195     		str	r5, [sp, #4]
  79 0094 0096     		str	r6, [sp]
  80 0096 4E48     		ldr	r0, .L8+40
  81 0098 FFF7FEFF 		bl	xTaskGenericCreate
  82 009c 2846     		mov	r0, r5
  83 009e FFF7FEFF 		bl	hardware_actuators
  84 00a2 4C49     		ldr	r1, .L8+44
  85 00a4 FFF7FEFF 		bl	actuator_set_event
  86 00a8 2846     		mov	r0, r5
  87 00aa FFF7FEFF 		bl	hardware_actuators
  88 00ae EF21     		movs	r1, #239
  89 00b0 FFF7FEFF 		bl	actuator_enable_event
  90 00b4 3046     		mov	r0, r6
  91 00b6 FFF7FEFF 		bl	hardware_actuators
  92 00ba 4649     		ldr	r1, .L8+44
  93 00bc FFF7FEFF 		bl	actuator_set_event
  94 00c0 3046     		mov	r0, r6
  95 00c2 FFF7FEFF 		bl	hardware_actuators
  96 00c6 EF21     		movs	r1, #239
  97 00c8 FFF7FEFF 		bl	actuator_enable_event
  98 00cc 414D     		ldr	r5, .L8+44
  99              	.L2:
 100 00ce 2046     		mov	r0, r4
 101 00d0 FFF7FEFF 		bl	hardware_actuators
 102 00d4 2946     		mov	r1, r5
 103 00d6 FFF7FEFF 		bl	actuator_set_event
 104 00da 2046     		mov	r0, r4
 105 00dc 0134     		adds	r4, r4, #1
 106 00de FFF7FEFF 		bl	hardware_actuators
 107 00e2 E4B2     		uxtb	r4, r4
 108 00e4 0221     		movs	r1, #2
 109 00e6 FFF7FEFF 		bl	actuator_enable_event
 110 00ea 092C     		cmp	r4, #9
 111 00ec EFD1     		bne	.L2
 112 00ee 394D     		ldr	r5, .L8+44
 113              	.L3:
 114 00f0 2046     		mov	r0, r4
 115 00f2 FFF7FEFF 		bl	hardware_actuators
 116 00f6 2946     		mov	r1, r5
 117 00f8 FFF7FEFF 		bl	actuator_set_event
 118 00fc 2046     		mov	r0, r4
 119 00fe 0134     		adds	r4, r4, #1
 120 0100 FFF7FEFF 		bl	hardware_actuators
 121 0104 E4B2     		uxtb	r4, r4
 122 0106 8021     		movs	r1, #128
 123 0108 FFF7FEFF 		bl	actuator_enable_event
 124 010c 112C     		cmp	r4, #17
 125 010e EFD1     		bne	.L3
 126 0110 3149     		ldr	r1, .L8+48
 127 0112 3248     		ldr	r0, .L8+52
 128 0114 FFF7FEFF 		bl	protocol_add_command
 129 0118 3149     		ldr	r1, .L8+56
 130 011a 3248     		ldr	r0, .L8+60
 131 011c FFF7FEFF 		bl	protocol_add_command
 132 0120 3149     		ldr	r1, .L8+64
 133 0122 3248     		ldr	r0, .L8+68
 134 0124 FFF7FEFF 		bl	protocol_add_command
 135 0128 3149     		ldr	r1, .L8+72
 136 012a 3248     		ldr	r0, .L8+76
 137 012c FFF7FEFF 		bl	protocol_add_command
 138 0130 3149     		ldr	r1, .L8+80
 139 0132 3248     		ldr	r0, .L8+84
 140 0134 FFF7FEFF 		bl	protocol_add_command
 141 0138 3149     		ldr	r1, .L8+88
 142 013a 3248     		ldr	r0, .L8+92
 143 013c FFF7FEFF 		bl	protocol_add_command
 144 0140 3149     		ldr	r1, .L8+96
 145 0142 3248     		ldr	r0, .L8+100
 146 0144 FFF7FEFF 		bl	protocol_add_command
 147 0148 2F49     		ldr	r1, .L8+96
 148 014a 3148     		ldr	r0, .L8+104
 149 014c FFF7FEFF 		bl	protocol_add_command
 150 0150 3049     		ldr	r1, .L8+108
 151 0152 3148     		ldr	r0, .L8+112
 152 0154 FFF7FEFF 		bl	protocol_add_command
 153 0158 3049     		ldr	r1, .L8+116
 154 015a 3148     		ldr	r0, .L8+120
 155 015c FFF7FEFF 		bl	protocol_add_command
 156 0160 3049     		ldr	r1, .L8+124
 157 0162 3148     		ldr	r0, .L8+128
 158 0164 FFF7FEFF 		bl	protocol_add_command
 159 0168 3049     		ldr	r1, .L8+132
 160 016a 3148     		ldr	r0, .L8+136
 161 016c FFF7FEFF 		bl	protocol_add_command
 162 0170 3049     		ldr	r1, .L8+140
 163 0172 3148     		ldr	r0, .L8+144
 164 0174 FFF7FEFF 		bl	protocol_add_command
 165 0178 3049     		ldr	r1, .L8+148
 166 017a 3148     		ldr	r0, .L8+152
 167 017c FFF7FEFF 		bl	protocol_add_command
 168 0180 3049     		ldr	r1, .L8+156
 169 0182 3148     		ldr	r0, .L8+160
 170 0184 FFF7FEFF 		bl	protocol_add_command
 171 0188 3049     		ldr	r1, .L8+164
 172 018a 3148     		ldr	r0, .L8+168
 173 018c FFF7FEFF 		bl	protocol_add_command
 174 0190 3049     		ldr	r1, .L8+172
 175 0192 3148     		ldr	r0, .L8+176
 176 0194 FFF7FEFF 		bl	protocol_add_command
 177 0198 FFF7FEFF 		bl	naveg_init
 178 019c 0020     		movs	r0, #0
 179 019e 04B0     		add	sp, sp, #16
 180              		@ sp needed
 181 01a0 BDE87040 		pop	{r4, r5, r6, lr}
 182 01a4 FFF7FEBF 		b	vTaskDelete
 183              	.L9:
 184              		.align	2
 185              	.L8:
 186 01a8 00000000 		.word	mod_logo
 187 01ac 00000000 		.word	mod_duo
 188 01b0 00000000 		.word	.LANCHOR0
 189 01b4 00000000 		.word	.LC0
 190 01b8 00000000 		.word	procotol_task
 191 01bc 04000000 		.word	.LC1
 192 01c0 00000000 		.word	actuators_task
 193 01c4 08000000 		.word	.LC2
 194 01c8 00000000 		.word	cli_task
 195 01cc 0C000000 		.word	.LC3
 196 01d0 00000000 		.word	displays_task
 197 01d4 00000000 		.word	actuators_cb
 198 01d8 00000000 		.word	ping_cb
 199 01dc 14000000 		.word	.LC4
 200 01e0 00000000 		.word	say_cb
 201 01e4 1C000000 		.word	.LC5
 202 01e8 00000000 		.word	led_cb
 203 01ec 28000000 		.word	.LC6
 204 01f0 00000000 		.word	glcd_text_cb
 205 01f4 3C000000 		.word	.LC7
 206 01f8 00000000 		.word	glcd_dialog_cb
 207 01fc 54000000 		.word	.LC8
 208 0200 00000000 		.word	glcd_draw_cb
 209 0204 64000000 		.word	.LC9
 210 0208 00000000 		.word	gui_connection_cb
 211 020c 7C000000 		.word	.LC10
 212 0210 84000000 		.word	.LC11
 213 0214 00000000 		.word	control_add_cb
 214 0218 8C000000 		.word	.LC12
 215 021c 00000000 		.word	control_rm_cb
 216 0220 CC000000 		.word	.LC13
 217 0224 00000000 		.word	control_set_cb
 218 0228 E0000000 		.word	.LC14
 219 022c 00000000 		.word	control_get_cb
 220 0230 F8000000 		.word	.LC15
 221 0234 00000000 		.word	initial_state_cb
 222 0238 0C010000 		.word	.LC16
 223 023c 00000000 		.word	bank_config_cb
 224 0240 24010000 		.word	.LC17
 225 0244 00000000 		.word	tuner_cb
 226 0248 40010000 		.word	.LC18
 227 024c 00000000 		.word	resp_cb
 228 0250 50010000 		.word	.LC19
 229 0254 00000000 		.word	restore_cb
 230 0258 5C010000 		.word	.LC20
 232              		.align	1
 233              		.p2align 2,,3
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 237              		.fpu softvfp
 239              	restore_cb:
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242 025c 10B5     		push	{r4, lr}
 243 025e 0446     		mov	r4, r0
 244 0260 0020     		movs	r0, #0
 245 0262 FFF7FEFF 		bl	cli_restore
 246 0266 2146     		mov	r1, r4
 247 0268 BDE81040 		pop	{r4, lr}
 248 026c 0148     		ldr	r0, .L12
 249 026e FFF7FEBF 		b	protocol_response
 250              	.L13:
 251 0272 00BF     		.align	2
 252              	.L12:
 253 0274 64010000 		.word	.LC21
 255              		.align	1
 256              		.p2align 2,,3
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu softvfp
 262              	control_set_cb:
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266 0278 0146     		mov	r1, r0
 267 027a 0148     		ldr	r0, .L15
 268 027c FFF7FEBF 		b	protocol_response
 269              	.L16:
 270              		.align	2
 271              	.L15:
 272 0280 64010000 		.word	.LC21
 274              		.align	1
 275              		.p2align 2,,3
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu softvfp
 281              	say_cb:
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285 0284 0368     		ldr	r3, [r0]
 286 0286 0146     		mov	r1, r0
 287 0288 5868     		ldr	r0, [r3, #4]
 288 028a FFF7FEBF 		b	protocol_response
 290              		.align	1
 291 028e 00BF     		.p2align 2,,3
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 295              		.fpu softvfp
 297              	ping_cb:
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 301 0290 0146     		mov	r1, r0
 302 0292 0148     		ldr	r0, .L19
 303 0294 FFF7FEBF 		b	protocol_response
 304              	.L20:
 305              		.align	2
 306              	.L19:
 307 0298 64010000 		.word	.LC21
 309              		.align	1
 310              		.p2align 2,,3
 311              		.syntax unified
 312              		.thumb
 313              		.thumb_func
 314              		.fpu softvfp
 316              	resp_cb:
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320 029c 0068     		ldr	r0, [r0]
 321 029e FFF7FEBF 		b	comm_webgui_response_cb
 323              		.global	__aeabi_d2f
 324              		.align	1
 325 02a2 00BF     		.p2align 2,,3
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.fpu softvfp
 331              	tuner_cb:
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334 02a4 0368     		ldr	r3, [r0]
 335 02a6 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 336 02aa 0446     		mov	r4, r0
 337 02ac 5868     		ldr	r0, [r3, #4]
 338 02ae FFF7FEFF 		bl	atof
 339 02b2 2368     		ldr	r3, [r4]
 340 02b4 0646     		mov	r6, r0
 341 02b6 D3E90250 		ldrd	r5, r0, [r3, #8]
 342 02ba 0F46     		mov	r7, r1
 343 02bc FFF7FEFF 		bl	atoi
 344 02c0 3946     		mov	r1, r7
 345 02c2 4FFA80F8 		sxtb	r8, r0
 346 02c6 3046     		mov	r0, r6
 347 02c8 FFF7FEFF 		bl	__aeabi_d2f
 348 02cc 2946     		mov	r1, r5
 349 02ce 4246     		mov	r2, r8
 350 02d0 FFF7FEFF 		bl	screen_tuner
 351 02d4 2146     		mov	r1, r4
 352 02d6 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 353 02da 0148     		ldr	r0, .L24
 354 02dc FFF7FEBF 		b	protocol_response
 355              	.L25:
 356              		.align	2
 357              	.L24:
 358 02e0 64010000 		.word	.LC21
 360              		.align	1
 361              		.p2align 2,,3
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 365              		.fpu softvfp
 367              	bank_config_cb:
 368              		@ args = 0, pretend = 0, frame = 8
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370 02e4 10B5     		push	{r4, lr}
 371 02e6 0368     		ldr	r3, [r0]
 372 02e8 0446     		mov	r4, r0
 373 02ea 82B0     		sub	sp, sp, #8
 374 02ec 5868     		ldr	r0, [r3, #4]
 375 02ee FFF7FEFF 		bl	atoi
 376 02f2 2368     		ldr	r3, [r4]
 377 02f4 8DF80000 		strb	r0, [sp]
 378 02f8 9868     		ldr	r0, [r3, #8]
 379 02fa FFF7FEFF 		bl	atoi
 380 02fe 2368     		ldr	r3, [r4]
 381 0300 8DF80100 		strb	r0, [sp, #1]
 382 0304 D868     		ldr	r0, [r3, #12]
 383 0306 FFF7FEFF 		bl	atoi
 384 030a 2368     		ldr	r3, [r4]
 385 030c 8DF80200 		strb	r0, [sp, #2]
 386 0310 1869     		ldr	r0, [r3, #16]
 387 0312 FFF7FEFF 		bl	atoi
 388 0316 2368     		ldr	r3, [r4]
 389 0318 8DF80300 		strb	r0, [sp, #3]
 390 031c 5869     		ldr	r0, [r3, #20]
 391 031e FFF7FEFF 		bl	atoi
 392 0322 8DF80400 		strb	r0, [sp, #4]
 393 0326 6846     		mov	r0, sp
 394 0328 FFF7FEFF 		bl	naveg_bank_config
 395 032c 2146     		mov	r1, r4
 396 032e 0248     		ldr	r0, .L28
 397 0330 FFF7FEFF 		bl	protocol_response
 398 0334 02B0     		add	sp, sp, #8
 399              		@ sp needed
 400 0336 10BD     		pop	{r4, pc}
 401              	.L29:
 402              		.align	2
 403              	.L28:
 404 0338 64010000 		.word	.LC21
 406              		.align	1
 407              		.p2align 2,,3
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 411              		.fpu softvfp
 413              	initial_state_cb:
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 033c 10B5     		push	{r4, lr}
 417 033e 0446     		mov	r4, r0
 418 0340 0368     		ldr	r3, [r0]
 419 0342 D3E90101 		ldrd	r0, r1, [r3, #4]
 420 0346 03F10C02 		add	r2, r3, #12
 421 034a FFF7FEFF 		bl	naveg_initial_state
 422 034e 2146     		mov	r1, r4
 423 0350 BDE81040 		pop	{r4, lr}
 424 0354 0148     		ldr	r0, .L32
 425 0356 FFF7FEBF 		b	protocol_response
 426              	.L33:
 427 035a 00BF     		.align	2
 428              	.L32:
 429 035c 64010000 		.word	.LC21
 431              		.align	1
 432              		.p2align 2,,3
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 436              		.fpu softvfp
 438              	control_get_cb:
 439              		@ args = 0, pretend = 0, frame = 32
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441 0360 70B5     		push	{r4, r5, r6, lr}
 442 0362 0546     		mov	r5, r0
 443 0364 0368     		ldr	r3, [r0]
 444 0366 88B0     		sub	sp, sp, #32
 445 0368 5868     		ldr	r0, [r3, #4]
 446 036a FFF7FEFF 		bl	atoi
 447 036e 2B68     		ldr	r3, [r5]
 448 0370 6C46     		mov	r4, sp
 449 0372 9968     		ldr	r1, [r3, #8]
 450 0374 FFF7FEFF 		bl	naveg_get_control
 451 0378 0646     		mov	r6, r0
 452 037a 094A     		ldr	r2, .L36
 453 037c 0323     		movs	r3, #3
 454 037e 92E80300 		ldm	r2, {r0, r1}
 455 0382 0822     		movs	r2, #8
 456 0384 84E80300 		stm	r4, {r0, r1}
 457 0388 0DF10701 		add	r1, sp, #7
 458 038c 3046     		mov	r0, r6
 459 038e FFF7FEFF 		bl	float_to_str
 460 0392 2946     		mov	r1, r5
 461 0394 2046     		mov	r0, r4
 462 0396 FFF7FEFF 		bl	protocol_response
 463 039a 08B0     		add	sp, sp, #32
 464              		@ sp needed
 465 039c 70BD     		pop	{r4, r5, r6, pc}
 466              	.L37:
 467 039e 00BF     		.align	2
 468              	.L36:
 469 03a0 6C010000 		.word	.LC22
 471              		.align	1
 472              		.p2align 2,,3
 473              		.syntax unified
 474              		.thumb
 475              		.thumb_func
 476              		.fpu softvfp
 478              	control_rm_cb:
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481 03a4 10B5     		push	{r4, lr}
 482 03a6 0446     		mov	r4, r0
 483 03a8 0368     		ldr	r3, [r0]
 484 03aa 5868     		ldr	r0, [r3, #4]
 485 03ac FFF7FEFF 		bl	atoi
 486 03b0 2368     		ldr	r3, [r4]
 487 03b2 9968     		ldr	r1, [r3, #8]
 488 03b4 FFF7FEFF 		bl	naveg_remove_control
 489 03b8 2146     		mov	r1, r4
 490 03ba BDE81040 		pop	{r4, lr}
 491 03be 0148     		ldr	r0, .L40
 492 03c0 FFF7FEBF 		b	protocol_response
 493              	.L41:
 494              		.align	2
 495              	.L40:
 496 03c4 64010000 		.word	.LC21
 498              		.align	1
 499              		.p2align 2,,3
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 503              		.fpu softvfp
 505              	control_add_cb:
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508 03c8 10B5     		push	{r4, lr}
 509 03ca 0446     		mov	r4, r0
 510 03cc 0068     		ldr	r0, [r0]
 511 03ce FFF7FEFF 		bl	data_parse_control
 512 03d2 FFF7FEFF 		bl	naveg_add_control
 513 03d6 2146     		mov	r1, r4
 514 03d8 BDE81040 		pop	{r4, lr}
 515 03dc 0148     		ldr	r0, .L44
 516 03de FFF7FEBF 		b	protocol_response
 517              	.L45:
 518 03e2 00BF     		.align	2
 519              	.L44:
 520 03e4 64010000 		.word	.LC21
 522              		.align	1
 523              		.p2align 2,,3
 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
 527              		.fpu softvfp
 529              	gui_connection_cb:
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 0, uses_anonymous_args = 0
 532 03e8 0368     		ldr	r3, [r0]
 533 03ea 10B5     		push	{r4, lr}
 534 03ec 0B49     		ldr	r1, .L51
 535 03ee 0446     		mov	r4, r0
 536 03f0 1868     		ldr	r0, [r3]
 537 03f2 FFF7FEFF 		bl	strcmp
 538 03f6 40B1     		cbz	r0, .L50
 539 03f8 0020     		movs	r0, #0
 540 03fa FFF7FEFF 		bl	naveg_ui_connection
 541 03fe 2146     		mov	r1, r4
 542 0400 BDE81040 		pop	{r4, lr}
 543 0404 0648     		ldr	r0, .L51+4
 544 0406 FFF7FEBF 		b	protocol_response
 545              	.L50:
 546 040a 0120     		movs	r0, #1
 547 040c FFF7FEFF 		bl	naveg_ui_connection
 548 0410 2146     		mov	r1, r4
 549 0412 BDE81040 		pop	{r4, lr}
 550 0416 0248     		ldr	r0, .L51+4
 551 0418 FFF7FEBF 		b	protocol_response
 552              	.L52:
 553              		.align	2
 554              	.L51:
 555 041c 7C000000 		.word	.LC10
 556 0420 64010000 		.word	.LC21
 558              		.align	1
 559              		.p2align 2,,3
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 563              		.fpu softvfp
 565              	glcd_draw_cb:
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568 0424 F0B5     		push	{r4, r5, r6, r7, lr}
 569 0426 0368     		ldr	r3, [r0]
 570 0428 0446     		mov	r4, r0
 571 042a 83B0     		sub	sp, sp, #12
 572 042c 5868     		ldr	r0, [r3, #4]
 573 042e FFF7FEFF 		bl	atoi
 574 0432 2368     		ldr	r3, [r4]
 575 0434 C5B2     		uxtb	r5, r0
 576 0436 9868     		ldr	r0, [r3, #8]
 577 0438 FFF7FEFF 		bl	atoi
 578 043c 2368     		ldr	r3, [r4]
 579 043e 0646     		mov	r6, r0
 580 0440 D868     		ldr	r0, [r3, #12]
 581 0442 FFF7FEFF 		bl	atoi
 582 0446 012D     		cmp	r5, #1
 583 0448 01D9     		bls	.L56
 584 044a 03B0     		add	sp, sp, #12
 585              		@ sp needed
 586 044c F0BD     		pop	{r4, r5, r6, r7, pc}
 587              	.L56:
 588 044e 2368     		ldr	r3, [r4]
 589 0450 0746     		mov	r7, r0
 590 0452 4FF48052 		mov	r2, #4096
 591 0456 1869     		ldr	r0, [r3, #16]
 592 0458 0949     		ldr	r1, .L57
 593 045a FFF7FEFF 		bl	str_to_hex
 594 045e 2846     		mov	r0, r5
 595 0460 FFF7FEFF 		bl	hardware_glcds
 596 0464 0123     		movs	r3, #1
 597 0466 F1B2     		uxtb	r1, r6
 598 0468 0093     		str	r3, [sp]
 599 046a FAB2     		uxtb	r2, r7
 600 046c 044B     		ldr	r3, .L57
 601 046e FFF7FEFF 		bl	uc1701_draw_image
 602 0472 2146     		mov	r1, r4
 603 0474 0348     		ldr	r0, .L57+4
 604 0476 03B0     		add	sp, sp, #12
 605              		@ sp needed
 606 0478 BDE8F040 		pop	{r4, r5, r6, r7, lr}
 607 047c FFF7FEBF 		b	protocol_response
 608              	.L58:
 609              		.align	2
 610              	.L57:
 611 0480 1C000000 		.word	g_msg_buffer
 612 0484 64010000 		.word	.LC21
 614              		.align	1
 615              		.p2align 2,,3
 616              		.syntax unified
 617              		.thumb
 618              		.thumb_func
 619              		.fpu softvfp
 621              	glcd_dialog_cb:
 622              		@ args = 0, pretend = 0, frame = 16
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624 0488 30B5     		push	{r4, r5, lr}
 625 048a 0368     		ldr	r3, [r0]
 626 048c 85B0     		sub	sp, sp, #20
 627 048e 0446     		mov	r4, r0
 628 0490 5868     		ldr	r0, [r3, #4]
 629 0492 FFF7FEFF 		bl	naveg_dialog
 630 0496 6A46     		mov	r2, sp
 631 0498 0025     		movs	r5, #0
 632 049a 0849     		ldr	r1, .L61
 633 049c 00F13003 		add	r3, r0, #48
 634 04a0 03C9     		ldm	r1, {r0, r1}
 635 04a2 82E80300 		stm	r2, {r0, r1}
 636 04a6 2146     		mov	r1, r4
 637 04a8 1046     		mov	r0, r2
 638 04aa 8DF80730 		strb	r3, [sp, #7]
 639 04ae 8DF80850 		strb	r5, [sp, #8]
 640 04b2 FFF7FEFF 		bl	protocol_response
 641 04b6 05B0     		add	sp, sp, #20
 642              		@ sp needed
 643 04b8 30BD     		pop	{r4, r5, pc}
 644              	.L62:
 645 04ba 00BF     		.align	2
 646              	.L61:
 647 04bc 6C010000 		.word	.LC22
 649              		.align	1
 650              		.p2align 2,,3
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 654              		.fpu softvfp
 656              	glcd_text_cb:
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 0, uses_anonymous_args = 0
 659 04c0 F0B5     		push	{r4, r5, r6, r7, lr}
 660 04c2 0368     		ldr	r3, [r0]
 661 04c4 0446     		mov	r4, r0
 662 04c6 83B0     		sub	sp, sp, #12
 663 04c8 5868     		ldr	r0, [r3, #4]
 664 04ca FFF7FEFF 		bl	atoi
 665 04ce 2368     		ldr	r3, [r4]
 666 04d0 C5B2     		uxtb	r5, r0
 667 04d2 9868     		ldr	r0, [r3, #8]
 668 04d4 FFF7FEFF 		bl	atoi
 669 04d8 2368     		ldr	r3, [r4]
 670 04da 0646     		mov	r6, r0
 671 04dc D868     		ldr	r0, [r3, #12]
 672 04de FFF7FEFF 		bl	atoi
 673 04e2 012D     		cmp	r5, #1
 674 04e4 01D9     		bls	.L66
 675 04e6 03B0     		add	sp, sp, #12
 676              		@ sp needed
 677 04e8 F0BD     		pop	{r4, r5, r6, r7, pc}
 678              	.L66:
 679 04ea 0746     		mov	r7, r0
 680 04ec 2846     		mov	r0, r5
 681 04ee FFF7FEFF 		bl	hardware_glcds
 682 04f2 0025     		movs	r5, #0
 683 04f4 4FF0010C 		mov	ip, #1
 684 04f8 2368     		ldr	r3, [r4]
 685 04fa F1B2     		uxtb	r1, r6
 686 04fc 1B69     		ldr	r3, [r3, #16]
 687 04fe FAB2     		uxtb	r2, r7
 688 0500 CDE9005C 		strd	r5, ip, [sp]
 689 0504 FFF7FEFF 		bl	uc1701_text
 690 0508 2146     		mov	r1, r4
 691 050a 0348     		ldr	r0, .L67
 692 050c 03B0     		add	sp, sp, #12
 693              		@ sp needed
 694 050e BDE8F040 		pop	{r4, r5, r6, r7, lr}
 695 0512 FFF7FEBF 		b	protocol_response
 696              	.L68:
 697 0516 00BF     		.align	2
 698              	.L67:
 699 0518 64010000 		.word	.LC21
 701              		.align	1
 702              		.p2align 2,,3
 703              		.syntax unified
 704              		.thumb
 705              		.thumb_func
 706              		.fpu softvfp
 708              	led_cb:
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 711 051c F8B5     		push	{r3, r4, r5, r6, r7, lr}
 712 051e 0368     		ldr	r3, [r0]
 713 0520 0446     		mov	r4, r0
 714 0522 5868     		ldr	r0, [r3, #4]
 715 0524 FFF7FEFF 		bl	atoi
 716 0528 C0B2     		uxtb	r0, r0
 717 052a FFF7FEFF 		bl	hardware_leds
 718 052e 2368     		ldr	r3, [r4]
 719 0530 0546     		mov	r5, r0
 720 0532 9868     		ldr	r0, [r3, #8]
 721 0534 FFF7FEFF 		bl	atoi
 722 0538 0121     		movs	r1, #1
 723 053a 0246     		mov	r2, r0
 724 053c 2846     		mov	r0, r5
 725 053e FFF7FEFF 		bl	ledz_set
 726 0542 2368     		ldr	r3, [r4]
 727 0544 D868     		ldr	r0, [r3, #12]
 728 0546 FFF7FEFF 		bl	atoi
 729 054a 0221     		movs	r1, #2
 730 054c 0246     		mov	r2, r0
 731 054e 2846     		mov	r0, r5
 732 0550 FFF7FEFF 		bl	ledz_set
 733 0554 2368     		ldr	r3, [r4]
 734 0556 1869     		ldr	r0, [r3, #16]
 735 0558 FFF7FEFF 		bl	atoi
 736 055c 0421     		movs	r1, #4
 737 055e 0246     		mov	r2, r0
 738 0560 2846     		mov	r0, r5
 739 0562 FFF7FEFF 		bl	ledz_set
 740 0566 6668     		ldr	r6, [r4, #4]
 741 0568 072E     		cmp	r6, #7
 742 056a 05D0     		beq	.L72
 743 056c 2146     		mov	r1, r4
 744 056e BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 745 0572 0C48     		ldr	r0, .L73
 746 0574 FFF7FEBF 		b	protocol_response
 747              	.L72:
 748 0578 2368     		ldr	r3, [r4]
 749 057a 5869     		ldr	r0, [r3, #20]
 750 057c FFF7FEFF 		bl	atoi
 751 0580 2368     		ldr	r3, [r4]
 752 0582 0746     		mov	r7, r0
 753 0584 9869     		ldr	r0, [r3, #24]
 754 0586 FFF7FEFF 		bl	atoi
 755 058a 3146     		mov	r1, r6
 756 058c 83B2     		uxth	r3, r0
 757 058e BAB2     		uxth	r2, r7
 758 0590 2846     		mov	r0, r5
 759 0592 FFF7FEFF 		bl	ledz_blink
 760 0596 2146     		mov	r1, r4
 761 0598 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 762 059c 0148     		ldr	r0, .L73
 763 059e FFF7FEBF 		b	protocol_response
 764              	.L74:
 765 05a2 00BF     		.align	2
 766              	.L73:
 767 05a4 64010000 		.word	.LC21
 769              		.align	1
 770              		.p2align 2,,3
 771              		.syntax unified
 772              		.thumb
 773              		.thumb_func
 774              		.fpu softvfp
 776              	actuators_cb:
 777              		@ args = 0, pretend = 0, frame = 8
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779 05a8 70B5     		push	{r4, r5, r6, lr}
 780 05aa 134C     		ldr	r4, .L84
 781 05ac 82B0     		sub	sp, sp, #8
 782 05ae 2179     		ldrb	r1, [r4, #4]	@ zero_extendqisi2
 783 05b0 04F10806 		add	r6, r4, #8
 784 05b4 4B1C     		adds	r3, r1, #1
 785 05b6 DBB2     		uxtb	r3, r3
 786 05b8 052B     		cmp	r3, #5
 787 05ba 08BF     		it	eq
 788 05bc 0023     		moveq	r3, #0
 789 05be 2371     		strb	r3, [r4, #4]
 790 05c0 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 791 05c2 06EB8105 		add	r5, r6, r1, lsl #2
 792 05c6 06F82130 		strb	r3, [r6, r1, lsl #2]
 793 05ca 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 794 05cc 0095     		str	r5, [sp]
 795 05ce 6B70     		strb	r3, [r5, #1]
 796 05d0 FFF7FEFF 		bl	actuator_get_status
 797 05d4 0023     		movs	r3, #0
 798 05d6 02AA     		add	r2, sp, #8
 799 05d8 42F8043D 		str	r3, [r2, #-4]!
 800 05dc A870     		strb	r0, [r5, #2]
 801 05de 6946     		mov	r1, sp
 802 05e0 2068     		ldr	r0, [r4]
 803 05e2 FFF7FEFF 		bl	xQueueGenericSendFromISR
 804 05e6 019B     		ldr	r3, [sp, #4]
 805 05e8 1BB1     		cbz	r3, .L75
 806 05ea 4FF08052 		mov	r2, #268435456
 807 05ee 034B     		ldr	r3, .L84+4
 808 05f0 1A60     		str	r2, [r3]
 809              	.L75:
 810 05f2 02B0     		add	sp, sp, #8
 811              		@ sp needed
 812 05f4 70BD     		pop	{r4, r5, r6, pc}
 813              	.L85:
 814 05f6 00BF     		.align	2
 815              	.L84:
 816 05f8 00000000 		.word	.LANCHOR0
 817 05fc 04ED00E0 		.word	-536810236
 819              		.align	1
 820              		.p2align 2,,3
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu softvfp
 826              	displays_task:
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829 0600 70B5     		push	{r4, r5, r6, lr}
 830 0602 0024     		movs	r4, #0
 831 0604 0C4E     		ldr	r6, .L93
 832 0606 2546     		mov	r5, r4
 833 0608 03E0     		b	.L88
 834              	.L92:
 835 060a B442     		cmp	r4, r6
 836 060c 0FD0     		beq	.L91
 837              	.L87:
 838 060e FFF7FEFF 		bl	vPortYield
 839              	.L88:
 840 0612 2846     		mov	r0, r5
 841 0614 FFF7FEFF 		bl	hardware_glcds
 842 0618 FFF7FEFF 		bl	uc1701_update
 843 061c FFF7FEFF 		bl	naveg_need_update
 844 0620 0134     		adds	r4, r4, #1
 845 0622 85F00105 		eor	r5, r5, #1
 846 0626 0028     		cmp	r0, #0
 847 0628 EFD1     		bne	.L92
 848 062a 0446     		mov	r4, r0
 849 062c EFE7     		b	.L87
 850              	.L91:
 851 062e FFF7FEFF 		bl	naveg_update
 852 0632 0024     		movs	r4, #0
 853 0634 EBE7     		b	.L87
 854              	.L94:
 855 0636 00BF     		.align	2
 856              	.L93:
 857 0638 20A10700 		.word	500000
 859              		.align	1
 860              		.p2align 2,,3
 861              		.syntax unified
 862              		.thumb
 863              		.thumb_func
 864              		.fpu softvfp
 866              	cli_task:
 867              		@ Volatile: function does not return.
 868              		@ args = 0, pretend = 0, frame = 0
 869              		@ frame_needed = 0, uses_anonymous_args = 0
 870 063c 08B5     		push	{r3, lr}
 871 063e 0020     		movs	r0, #0
 872 0640 FFF7FEFF 		bl	hardware_coreboard_power
 873              	.L96:
 874 0644 FFF7FEFF 		bl	cli_process
 875 0648 FCE7     		b	.L96
 877              		.align	1
 878 064a 00BF     		.p2align 2,,3
 879              		.syntax unified
 880              		.thumb
 881              		.thumb_func
 882              		.fpu softvfp
 884              	actuators_task:
 885              		@ args = 0, pretend = 0, frame = 8
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887 064c 70B5     		push	{r4, r5, r6, lr}
 888 064e 3F4D     		ldr	r5, .L142
 889 0650 82B0     		sub	sp, sp, #8
 890 0652 01E0     		b	.L101
 891              	.L100:
 892 0654 012C     		cmp	r4, #1
 893 0656 11D0     		beq	.L134
 894              	.L101:
 895 0658 0023     		movs	r3, #0
 896 065a 4FF0FF32 		mov	r2, #-1
 897 065e 01A9     		add	r1, sp, #4
 898 0660 2868     		ldr	r0, [r5]
 899 0662 FFF7FEFF 		bl	xQueueGenericReceive
 900 0666 0446     		mov	r4, r0
 901 0668 0120     		movs	r0, #1
 902 066a FFF7FEFF 		bl	cli_restore
 903 066e 0028     		cmp	r0, #0
 904 0670 F0D1     		bne	.L100
 905 0672 0220     		movs	r0, #2
 906 0674 FFF7FEFF 		bl	cli_restore
 907 0678 012C     		cmp	r4, #1
 908 067a EDD1     		bne	.L101
 909              	.L134:
 910 067c 2046     		mov	r0, r4
 911 067e FFF7FEFF 		bl	cli_restore
 912 0682 0128     		cmp	r0, #1
 913 0684 E8D1     		bne	.L101
 914 0686 019B     		ldr	r3, [sp, #4]
 915 0688 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 916 068a 5E78     		ldrb	r6, [r3, #1]	@ zero_extendqisi2
 917 068c 012A     		cmp	r2, #1
 918 068e 9C78     		ldrb	r4, [r3, #2]	@ zero_extendqisi2
 919 0690 11D0     		beq	.L135
 920 0692 022A     		cmp	r2, #2
 921 0694 28D0     		beq	.L136
 922 0696 002A     		cmp	r2, #0
 923 0698 DED1     		bne	.L101
 924 069a A307     		lsls	r3, r4, #30
 925 069c 02D5     		bpl	.L115
 926 069e 3046     		mov	r0, r6
 927 06a0 FFF7FEFF 		bl	naveg_foot_change
 928              	.L115:
 929 06a4 012E     		cmp	r6, #1
 930 06a6 94BF     		ite	ls
 931 06a8 0020     		movls	r0, #0
 932 06aa 0120     		movhi	r0, #1
 933 06ac FFF7FEFF 		bl	hardware_glcds
 934 06b0 FFF7FEFF 		bl	uc1701_update
 935 06b4 D0E7     		b	.L101
 936              	.L135:
 937 06b6 E007     		lsls	r0, r4, #31
 938 06b8 36D4     		bmi	.L137
 939              	.L104:
 940 06ba 2107     		lsls	r1, r4, #28
 941 06bc 1FD5     		bpl	.L105
 942 06be 002E     		cmp	r6, #0
 943 06c0 36D0     		beq	.L106
 944 06c2 3046     		mov	r0, r6
 945 06c4 FFF7FEFF 		bl	naveg_master_volume
 946 06c8 6207     		lsls	r2, r4, #29
 947 06ca 03D5     		bpl	.L108
 948              	.L107:
 949 06cc FFF7FEFF 		bl	naveg_is_master_vol
 950 06d0 0028     		cmp	r0, #0
 951 06d2 36D1     		bne	.L138
 952              	.L108:
 953 06d4 A006     		lsls	r0, r4, #26
 954 06d6 18D4     		bmi	.L139
 955              	.L111:
 956 06d8 6106     		lsls	r1, r4, #25
 957 06da 1ED4     		bmi	.L140
 958              	.L112:
 959 06dc 3046     		mov	r0, r6
 960 06de FFF7FEFF 		bl	hardware_glcds
 961 06e2 FFF7FEFF 		bl	uc1701_update
 962 06e6 B7E7     		b	.L101
 963              	.L136:
 964 06e8 2206     		lsls	r2, r4, #24
 965 06ea 26D4     		bmi	.L141
 966              	.L114:
 967 06ec 032E     		cmp	r6, #3
 968 06ee 94BF     		ite	ls
 969 06f0 0020     		movls	r0, #0
 970 06f2 0120     		movhi	r0, #1
 971 06f4 FFF7FEFF 		bl	hardware_glcds
 972 06f8 FFF7FEFF 		bl	uc1701_update
 973 06fc ACE7     		b	.L101
 974              	.L105:
 975 06fe 6307     		lsls	r3, r4, #29
 976 0700 E8D5     		bpl	.L108
 977 0702 002E     		cmp	r6, #0
 978 0704 E2D1     		bne	.L107
 979 0706 A006     		lsls	r0, r4, #26
 980 0708 E6D5     		bpl	.L111
 981              	.L139:
 982 070a 3046     		mov	r0, r6
 983 070c FFF7FEFF 		bl	naveg_inc_control
 984 0710 3046     		mov	r0, r6
 985 0712 FFF7FEFF 		bl	naveg_down
 986 0716 6106     		lsls	r1, r4, #25
 987 0718 E0D5     		bpl	.L112
 988              	.L140:
 989 071a 3046     		mov	r0, r6
 990 071c FFF7FEFF 		bl	naveg_dec_control
 991 0720 3046     		mov	r0, r6
 992 0722 FFF7FEFF 		bl	naveg_up
 993 0726 D9E7     		b	.L112
 994              	.L137:
 995 0728 3046     		mov	r0, r6
 996 072a FFF7FEFF 		bl	naveg_enter
 997 072e C4E7     		b	.L104
 998              	.L106:
 999 0730 3146     		mov	r1, r6
 1000 0732 3046     		mov	r0, r6
 1001 0734 FFF7FEFF 		bl	naveg_toggle_tool
 1002 0738 CCE7     		b	.L108
 1003              	.L141:
 1004 073a 3046     		mov	r0, r6
 1005 073c FFF7FEFF 		bl	naveg_pot_change
 1006 0740 D4E7     		b	.L114
 1007              	.L138:
 1008 0742 3046     		mov	r0, r6
 1009 0744 FFF7FEFF 		bl	naveg_master_volume
 1010 0748 C4E7     		b	.L108
 1011              	.L143:
 1012 074a 00BF     		.align	2
 1013              	.L142:
 1014 074c 00000000 		.word	.LANCHOR0
 1016              		.align	1
 1017              		.p2align 2,,3
 1018              		.syntax unified
 1019              		.thumb
 1020              		.thumb_func
 1021              		.fpu softvfp
 1023              	procotol_task:
 1024              		@ args = 0, pretend = 0, frame = 16
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 1026 0750 70B5     		push	{r4, r5, r6, lr}
 1027 0752 0B4D     		ldr	r5, .L150
 1028 0754 0026     		movs	r6, #0
 1029 0756 2C46     		mov	r4, r5
 1030 0758 84B0     		sub	sp, sp, #16
 1031              	.L145:
 1032 075a FFF7FEFF 		bl	comm_webgui_read
 1033 075e 0023     		movs	r3, #0
 1034 0760 4FF48052 		mov	r2, #4096
 1035 0764 2146     		mov	r1, r4
 1036 0766 FFF7FEFF 		bl	ringbuff_read_until
 1037 076a 0346     		mov	r3, r0
 1038 076c 0028     		cmp	r0, #0
 1039 076e F4D0     		beq	.L145
 1040 0770 01A8     		add	r0, sp, #4
 1041 0772 CDE90165 		strd	r6, r5, [sp, #4]
 1042 0776 0393     		str	r3, [sp, #12]
 1043 0778 FFF7FEFF 		bl	protocol_parse
 1044 077c EDE7     		b	.L145
 1045              	.L151:
 1046 077e 00BF     		.align	2
 1047              	.L150:
 1048 0780 1C000000 		.word	g_msg_buffer
 1050              		.section	.text.startup,"ax",%progbits
 1051              		.align	1
 1052              		.p2align 2,,3
 1053              		.global	main
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu softvfp
 1059              	main:
 1060              		@ Volatile: function does not return.
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063 0000 00B5     		push	{lr}
 1064 0002 85B0     		sub	sp, sp, #20
 1065 0004 FFF7FEFF 		bl	hardware_setup
 1066 0008 0023     		movs	r3, #0
 1067 000a 0122     		movs	r2, #1
 1068 000c CDE90233 		strd	r3, r3, [sp, #8]
 1069 0010 0193     		str	r3, [sp, #4]
 1070 0012 1946     		mov	r1, r3
 1071 0014 0092     		str	r2, [sp]
 1072 0016 0448     		ldr	r0, .L155
 1073 0018 4FF48072 		mov	r2, #256
 1074 001c FFF7FEFF 		bl	xTaskGenericCreate
 1075 0020 FFF7FEFF 		bl	vTaskStartScheduler
 1076              	.L153:
 1077 0024 FEE7     		b	.L153
 1078              	.L156:
 1079 0026 00BF     		.align	2
 1080              	.L155:
 1081 0028 00000000 		.word	setup_task
 1083              		.text
 1084              		.align	1
 1085              		.p2align 2,,3
 1086              		.global	serial_error
 1087              		.syntax unified
 1088              		.thumb
 1089              		.thumb_func
 1090              		.fpu softvfp
 1092              	serial_error:
 1093              		@ args = 0, pretend = 0, frame = 0
 1094              		@ frame_needed = 0, uses_anonymous_args = 0
 1095              		@ link register save eliminated.
 1096 0784 7047     		bx	lr
 1098              		.align	1
 1099 0786 00BF     		.p2align 2,,3
 1100              		.global	HardFault_Handler
 1101              		.syntax unified
 1102              		.thumb
 1103              		.thumb_func
 1104              		.fpu softvfp
 1106              	HardFault_Handler:
 1107              		@ Volatile: function does not return.
 1108              		@ args = 0, pretend = 0, frame = 0
 1109              		@ frame_needed = 0, uses_anonymous_args = 0
 1110 0788 08B5     		push	{r3, lr}
 1111 078a 0020     		movs	r0, #0
 1112 078c FFF7FEFF 		bl	hardware_leds
 1113 0790 0621     		movs	r1, #6
 1114 0792 FFF7FEFF 		bl	ledz_on
 1115              	.L159:
 1116 0796 FEE7     		b	.L159
 1118              		.align	1
 1119              		.p2align 2,,3
 1120              		.global	MemManage_Handler
 1121              		.syntax unified
 1122              		.thumb
 1123              		.thumb_func
 1124              		.fpu softvfp
 1126              	MemManage_Handler:
 1127              		@ Volatile: function does not return.
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130 0798 08B5     		push	{r3, lr}
 1131 079a 0120     		movs	r0, #1
 1132 079c FFF7FEFF 		bl	hardware_leds
 1133 07a0 0621     		movs	r1, #6
 1134 07a2 FFF7FEFF 		bl	ledz_on
 1135              	.L162:
 1136 07a6 FEE7     		b	.L162
 1138              		.align	1
 1139              		.p2align 2,,3
 1140              		.global	BusFault_Handler
 1141              		.syntax unified
 1142              		.thumb
 1143              		.thumb_func
 1144              		.fpu softvfp
 1146              	BusFault_Handler:
 1147              		@ Volatile: function does not return.
 1148              		@ args = 0, pretend = 0, frame = 0
 1149              		@ frame_needed = 0, uses_anonymous_args = 0
 1150 07a8 08B5     		push	{r3, lr}
 1151 07aa 0220     		movs	r0, #2
 1152 07ac FFF7FEFF 		bl	hardware_leds
 1153 07b0 0621     		movs	r1, #6
 1154 07b2 FFF7FEFF 		bl	ledz_on
 1155              	.L165:
 1156 07b6 FEE7     		b	.L165
 1158              		.align	1
 1159              		.p2align 2,,3
 1160              		.global	UsageFault_Handler
 1161              		.syntax unified
 1162              		.thumb
 1163              		.thumb_func
 1164              		.fpu softvfp
 1166              	UsageFault_Handler:
 1167              		@ Volatile: function does not return.
 1168              		@ args = 0, pretend = 0, frame = 0
 1169              		@ frame_needed = 0, uses_anonymous_args = 0
 1170 07b8 08B5     		push	{r3, lr}
 1171 07ba 0320     		movs	r0, #3
 1172 07bc FFF7FEFF 		bl	hardware_leds
 1173 07c0 0621     		movs	r1, #6
 1174 07c2 FFF7FEFF 		bl	ledz_on
 1175              	.L168:
 1176 07c6 FEE7     		b	.L168
 1178              		.align	1
 1179              		.p2align 2,,3
 1180              		.global	vApplicationMallocFailedHook
 1181              		.syntax unified
 1182              		.thumb
 1183              		.thumb_func
 1184              		.fpu softvfp
 1186              	vApplicationMallocFailedHook:
 1187              		@ Volatile: function does not return.
 1188              		@ args = 0, pretend = 0, frame = 0
 1189              		@ frame_needed = 0, uses_anonymous_args = 0
 1190 07c8 08B5     		push	{r3, lr}
 1191 07ca 0420     		movs	r0, #4
 1192 07cc FFF7FEFF 		bl	hardware_leds
 1193 07d0 0621     		movs	r1, #6
 1194 07d2 FFF7FEFF 		bl	ledz_on
 1195              	.L171:
 1196 07d6 FEE7     		b	.L171
 1198              		.align	1
 1199              		.p2align 2,,3
 1200              		.global	vApplicationStackOverflowHook
 1201              		.syntax unified
 1202              		.thumb
 1203              		.thumb_func
 1204              		.fpu softvfp
 1206              	vApplicationStackOverflowHook:
 1207              		@ args = 0, pretend = 0, frame = 0
 1208              		@ frame_needed = 0, uses_anonymous_args = 0
 1209 07d8 F0B5     		push	{r4, r5, r6, r7, lr}
 1210 07da 0020     		movs	r0, #0
 1211 07dc 83B0     		sub	sp, sp, #12
 1212 07de 0F46     		mov	r7, r1
 1213 07e0 FFF7FEFF 		bl	hardware_glcds
 1214 07e4 0024     		movs	r4, #0
 1215 07e6 0546     		mov	r5, r0
 1216 07e8 0126     		movs	r6, #1
 1217 07ea 2146     		mov	r1, r4
 1218 07ec FFF7FEFF 		bl	uc1701_clear
 1219 07f0 2846     		mov	r0, r5
 1220 07f2 2246     		mov	r2, r4
 1221 07f4 2146     		mov	r1, r4
 1222 07f6 0B4B     		ldr	r3, .L176
 1223 07f8 CDE90046 		strd	r4, r6, [sp]
 1224 07fc FFF7FEFF 		bl	uc1701_text
 1225 0800 2146     		mov	r1, r4
 1226 0802 3B46     		mov	r3, r7
 1227 0804 0A22     		movs	r2, #10
 1228 0806 2846     		mov	r0, r5
 1229 0808 CDE90046 		strd	r4, r6, [sp]
 1230 080c FFF7FEFF 		bl	uc1701_text
 1231 0810 2846     		mov	r0, r5
 1232 0812 FFF7FEFF 		bl	uc1701_update
 1233 0816 0520     		movs	r0, #5
 1234 0818 FFF7FEFF 		bl	hardware_leds
 1235 081c 0621     		movs	r1, #6
 1236 081e FFF7FEFF 		bl	ledz_on
 1237              	.L174:
 1238 0822 FEE7     		b	.L174
 1239              	.L177:
 1240              		.align	2
 1241              	.L176:
 1242 0824 74010000 		.word	.LC23
 1244              		.bss
 1245              		.align	2
 1246              		.set	.LANCHOR0,. + 0
 1249              	g_actuators_queue:
 1250 0000 00000000 		.space	4
 1253              	i.9820:
 1254 0004 00       		.space	1
 1255 0005 000000   		.space	3
 1258              	info.9821:
 1259 0008 00000000 		.space	20
 1259      00000000 
 1259      00000000 
 1259      00000000 
 1259      00000000 
 1262              	g_msg_buffer:
 1263 001c 00000000 		.space	4096
 1263      00000000 
 1263      00000000 
 1263      00000000 
 1263      00000000 
 1264              		.section	.rodata.str1.4,"aMS",%progbits,1
 1265              		.align	2
 1266              	.LC0:
 1267 0000 70726F00 		.ascii	"pro\000"
 1268              	.LC1:
 1269 0004 61637400 		.ascii	"act\000"
 1270              	.LC2:
 1271 0008 636C6900 		.ascii	"cli\000"
 1272              	.LC3:
 1273 000c 64697370 		.ascii	"disp\000"
 1273      00
 1274 0011 000000   		.space	3
 1275              	.LC4:
 1276 0014 70696E67 		.ascii	"ping\000"
 1276      00
 1277 0019 000000   		.space	3
 1278              	.LC5:
 1279 001c 73617920 		.ascii	"say %s ...\000"
 1279      2573202E 
 1279      2E2E00
 1280 0027 00       		.space	1
 1281              	.LC6:
 1282 0028 6C656420 		.ascii	"led %i %i %i %i ...\000"
 1282      25692025 
 1282      69202569 
 1282      20256920 
 1282      2E2E2E00 
 1283              	.LC7:
 1284 003c 676C6364 		.ascii	"glcd_text %i %i %i %s\000"
 1284      5F746578 
 1284      74202569 
 1284      20256920 
 1284      25692025 
 1285 0052 0000     		.space	2
 1286              	.LC8:
 1287 0054 676C6364 		.ascii	"glcd_dialog %s\000"
 1287      5F646961 
 1287      6C6F6720 
 1287      257300
 1288 0063 00       		.space	1
 1289              	.LC9:
 1290 0064 676C6364 		.ascii	"glcd_draw %i %i %i %s\000"
 1290      5F647261 
 1290      77202569 
 1290      20256920 
 1290      25692025 
 1291 007a 0000     		.space	2
 1292              	.LC10:
 1293 007c 75695F63 		.ascii	"ui_con\000"
 1293      6F6E00
 1294 0083 00       		.space	1
 1295              	.LC11:
 1296 0084 75695F64 		.ascii	"ui_dis\000"
 1296      697300
 1297 008b 00       		.space	1
 1298              	.LC12:
 1299 008c 636F6E74 		.ascii	"control_add %i %s %s %i %s %f %f %f %i %i %i %i %i "
 1299      726F6C5F 
 1299      61646420 
 1299      25692025 
 1299      73202573 
 1300 00bf 25692025 		.ascii	"%i %i ...\000"
 1300      69202E2E 
 1300      2E00
 1301 00c9 000000   		.space	3
 1302              	.LC13:
 1303 00cc 636F6E74 		.ascii	"control_rm %i %s\000"
 1303      726F6C5F 
 1303      726D2025 
 1303      69202573 
 1303      00
 1304 00dd 000000   		.space	3
 1305              	.LC14:
 1306 00e0 636F6E74 		.ascii	"control_set %i %s %f\000"
 1306      726F6C5F 
 1306      73657420 
 1306      25692025 
 1306      73202566 
 1307 00f5 000000   		.space	3
 1308              	.LC15:
 1309 00f8 636F6E74 		.ascii	"control_get %i %s\000"
 1309      726F6C5F 
 1309      67657420 
 1309      25692025 
 1309      7300
 1310 010a 0000     		.space	2
 1311              	.LC16:
 1312 010c 696E6974 		.ascii	"initial_state %s %s ...\000"
 1312      69616C5F 
 1312      73746174 
 1312      65202573 
 1312      20257320 
 1313              	.LC17:
 1314 0124 62616E6B 		.ascii	"bank_config %i %i %i %i %i\000"
 1314      5F636F6E 
 1314      66696720 
 1314      25692025 
 1314      69202569 
 1315 013f 00       		.space	1
 1316              	.LC18:
 1317 0140 74756E65 		.ascii	"tuner %f %s %i\000"
 1317      72202566 
 1317      20257320 
 1317      256900
 1318 014f 00       		.space	1
 1319              	.LC19:
 1320 0150 72657370 		.ascii	"resp %i ...\000"
 1320      20256920 
 1320      2E2E2E00 
 1321              	.LC20:
 1322 015c 72657374 		.ascii	"restore\000"
 1322      6F726500 
 1323              	.LC21:
 1324 0164 72657370 		.ascii	"resp 0\000"
 1324      203000
 1325 016b 00       		.space	1
 1326              	.LC22:
 1327 016c 72657370 		.ascii	"resp 0 \000"
 1327      20302000 
 1328              	.LC23:
 1329 0174 73746163 		.ascii	"stack overflow\000"
 1329      6B206F76 
 1329      6572666C 
 1329      6F7700
 1330              		.ident	"GCC: (GNU Tools for Arm Embedded Processors 7-2018-q3-update) 7.3.1 20180622 (release) [AR
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cci2lqUk.s:13     .text:0000000000000000 $t
     /tmp/cci2lqUk.s:20     .text:0000000000000000 setup_task
     /tmp/cci2lqUk.s:186    .text:00000000000001a8 $d
     /tmp/cci2lqUk.s:1023   .text:0000000000000750 procotol_task
     /tmp/cci2lqUk.s:884    .text:000000000000064c actuators_task
     /tmp/cci2lqUk.s:866    .text:000000000000063c cli_task
     /tmp/cci2lqUk.s:826    .text:0000000000000600 displays_task
     /tmp/cci2lqUk.s:776    .text:00000000000005a8 actuators_cb
     /tmp/cci2lqUk.s:297    .text:0000000000000290 ping_cb
     /tmp/cci2lqUk.s:281    .text:0000000000000284 say_cb
     /tmp/cci2lqUk.s:708    .text:000000000000051c led_cb
     /tmp/cci2lqUk.s:656    .text:00000000000004c0 glcd_text_cb
     /tmp/cci2lqUk.s:621    .text:0000000000000488 glcd_dialog_cb
     /tmp/cci2lqUk.s:565    .text:0000000000000424 glcd_draw_cb
     /tmp/cci2lqUk.s:529    .text:00000000000003e8 gui_connection_cb
     /tmp/cci2lqUk.s:505    .text:00000000000003c8 control_add_cb
     /tmp/cci2lqUk.s:478    .text:00000000000003a4 control_rm_cb
     /tmp/cci2lqUk.s:262    .text:0000000000000278 control_set_cb
     /tmp/cci2lqUk.s:438    .text:0000000000000360 control_get_cb
     /tmp/cci2lqUk.s:413    .text:000000000000033c initial_state_cb
     /tmp/cci2lqUk.s:367    .text:00000000000002e4 bank_config_cb
     /tmp/cci2lqUk.s:331    .text:00000000000002a4 tuner_cb
     /tmp/cci2lqUk.s:316    .text:000000000000029c resp_cb
     /tmp/cci2lqUk.s:239    .text:000000000000025c restore_cb
     /tmp/cci2lqUk.s:232    .text:000000000000025c $t
     /tmp/cci2lqUk.s:253    .text:0000000000000274 $d
     /tmp/cci2lqUk.s:255    .text:0000000000000278 $t
     /tmp/cci2lqUk.s:272    .text:0000000000000280 $d
     /tmp/cci2lqUk.s:274    .text:0000000000000284 $t
     /tmp/cci2lqUk.s:307    .text:0000000000000298 $d
     /tmp/cci2lqUk.s:309    .text:000000000000029c $t
     /tmp/cci2lqUk.s:358    .text:00000000000002e0 $d
     /tmp/cci2lqUk.s:360    .text:00000000000002e4 $t
     /tmp/cci2lqUk.s:404    .text:0000000000000338 $d
     /tmp/cci2lqUk.s:406    .text:000000000000033c $t
     /tmp/cci2lqUk.s:429    .text:000000000000035c $d
     /tmp/cci2lqUk.s:431    .text:0000000000000360 $t
     /tmp/cci2lqUk.s:469    .text:00000000000003a0 $d
     /tmp/cci2lqUk.s:471    .text:00000000000003a4 $t
     /tmp/cci2lqUk.s:496    .text:00000000000003c4 $d
     /tmp/cci2lqUk.s:498    .text:00000000000003c8 $t
     /tmp/cci2lqUk.s:520    .text:00000000000003e4 $d
     /tmp/cci2lqUk.s:522    .text:00000000000003e8 $t
     /tmp/cci2lqUk.s:555    .text:000000000000041c $d
     /tmp/cci2lqUk.s:558    .text:0000000000000424 $t
     /tmp/cci2lqUk.s:611    .text:0000000000000480 $d
     /tmp/cci2lqUk.s:1262   .bss:000000000000001c g_msg_buffer
     /tmp/cci2lqUk.s:614    .text:0000000000000488 $t
     /tmp/cci2lqUk.s:647    .text:00000000000004bc $d
     /tmp/cci2lqUk.s:649    .text:00000000000004c0 $t
     /tmp/cci2lqUk.s:699    .text:0000000000000518 $d
     /tmp/cci2lqUk.s:701    .text:000000000000051c $t
     /tmp/cci2lqUk.s:767    .text:00000000000005a4 $d
     /tmp/cci2lqUk.s:769    .text:00000000000005a8 $t
     /tmp/cci2lqUk.s:816    .text:00000000000005f8 $d
     /tmp/cci2lqUk.s:819    .text:0000000000000600 $t
     /tmp/cci2lqUk.s:857    .text:0000000000000638 $d
     /tmp/cci2lqUk.s:859    .text:000000000000063c $t
     /tmp/cci2lqUk.s:1014   .text:000000000000074c $d
     /tmp/cci2lqUk.s:1016   .text:0000000000000750 $t
     /tmp/cci2lqUk.s:1048   .text:0000000000000780 $d
     /tmp/cci2lqUk.s:1051   .text.startup:0000000000000000 $t
     /tmp/cci2lqUk.s:1059   .text.startup:0000000000000000 main
     /tmp/cci2lqUk.s:1081   .text.startup:0000000000000028 $d
     /tmp/cci2lqUk.s:1084   .text:0000000000000784 $t
     /tmp/cci2lqUk.s:1092   .text:0000000000000784 serial_error
     /tmp/cci2lqUk.s:1106   .text:0000000000000788 HardFault_Handler
     /tmp/cci2lqUk.s:1126   .text:0000000000000798 MemManage_Handler
     /tmp/cci2lqUk.s:1146   .text:00000000000007a8 BusFault_Handler
     /tmp/cci2lqUk.s:1166   .text:00000000000007b8 UsageFault_Handler
     /tmp/cci2lqUk.s:1186   .text:00000000000007c8 vApplicationMallocFailedHook
     /tmp/cci2lqUk.s:1206   .text:00000000000007d8 vApplicationStackOverflowHook
     /tmp/cci2lqUk.s:1242   .text:0000000000000824 $d
     /tmp/cci2lqUk.s:1245   .bss:0000000000000000 $d
     /tmp/cci2lqUk.s:1249   .bss:0000000000000000 g_actuators_queue
     /tmp/cci2lqUk.s:1253   .bss:0000000000000004 i.9820
     /tmp/cci2lqUk.s:1258   .bss:0000000000000008 info.9821
     /tmp/cci2lqUk.s:1265   .rodata.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
screen_image
hardware_glcds
uc1701_update
cli_init
comm_init
xQueueGenericCreate
xTaskGenericCreate
hardware_actuators
actuator_set_event
actuator_enable_event
protocol_add_command
naveg_init
vTaskDelete
mod_logo
mod_duo
cli_restore
protocol_response
comm_webgui_response_cb
__aeabi_d2f
atof
atoi
screen_tuner
naveg_bank_config
naveg_initial_state
naveg_get_control
float_to_str
naveg_remove_control
data_parse_control
naveg_add_control
strcmp
naveg_ui_connection
str_to_hex
uc1701_draw_image
naveg_dialog
uc1701_text
hardware_leds
ledz_set
ledz_blink
actuator_get_status
xQueueGenericSendFromISR
vPortYield
naveg_need_update
naveg_update
hardware_coreboard_power
cli_process
xQueueGenericReceive
naveg_foot_change
naveg_master_volume
naveg_is_master_vol
naveg_inc_control
naveg_down
naveg_dec_control
naveg_up
naveg_enter
naveg_toggle_tool
naveg_pot_change
comm_webgui_read
ringbuff_read_until
protocol_parse
hardware_setup
vTaskStartScheduler
ledz_on
uc1701_clear
