   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              		.align	1
  14              		.p2align 2,,3
  15              		.syntax unified
  16              		.thumb
  17              		.thumb_func
  18              		.fpu softvfp
  20              	setup_task:
  21              		@ args = 0, pretend = 0, frame = 0
  22              		@ frame_needed = 0, uses_anonymous_args = 0
  23 0000 70B5     		push	{r4, r5, r6, lr}
  24 0002 6B49     		ldr	r1, .L8
  25 0004 84B0     		sub	sp, sp, #16
  26 0006 0020     		movs	r0, #0
  27 0008 FFF7FEFF 		bl	screen_image
  28 000c 0020     		movs	r0, #0
  29 000e FFF7FEFF 		bl	hardware_glcds
  30 0012 FFF7FEFF 		bl	uc1701_update
  31 0016 6749     		ldr	r1, .L8+4
  32 0018 0120     		movs	r0, #1
  33 001a FFF7FEFF 		bl	screen_image
  34 001e 0120     		movs	r0, #1
  35 0020 FFF7FEFF 		bl	hardware_glcds
  36 0024 FFF7FEFF 		bl	uc1701_update
  37 0028 FFF7FEFF 		bl	cli_init
  38 002c FFF7FEFF 		bl	comm_init
  39 0030 0022     		movs	r2, #0
  40 0032 0421     		movs	r1, #4
  41 0034 0A20     		movs	r0, #10
  42 0036 0025     		movs	r5, #0
  43 0038 FFF7FEFF 		bl	xQueueGenericCreate
  44 003c 0422     		movs	r2, #4
  45 003e 5E4B     		ldr	r3, .L8+8
  46 0040 0395     		str	r5, [sp, #12]
  47 0042 5E49     		ldr	r1, .L8+12
  48 0044 1860     		str	r0, [r3]
  49 0046 2B46     		mov	r3, r5
  50 0048 CDE90155 		strd	r5, r5, [sp, #4]
  51 004c 0092     		str	r2, [sp]
  52 004e 5C48     		ldr	r0, .L8+16
  53 0050 4FF40072 		mov	r2, #512
  54 0054 FFF7FEFF 		bl	xTaskGenericCreate
  55 0058 0322     		movs	r2, #3
  56 005a 0224     		movs	r4, #2
  57 005c 0126     		movs	r6, #1
  58 005e 2B46     		mov	r3, r5
  59 0060 CDE90255 		strd	r5, r5, [sp, #8]
  60 0064 0195     		str	r5, [sp, #4]
  61 0066 0092     		str	r2, [sp]
  62 0068 5649     		ldr	r1, .L8+20
  63 006a 4FF48072 		mov	r2, #256
  64 006e 5648     		ldr	r0, .L8+24
  65 0070 FFF7FEFF 		bl	xTaskGenericCreate
  66 0074 2B46     		mov	r3, r5
  67 0076 CDE90255 		strd	r5, r5, [sp, #8]
  68 007a 0195     		str	r5, [sp, #4]
  69 007c 8022     		movs	r2, #128
  70 007e 5349     		ldr	r1, .L8+28
  71 0080 0094     		str	r4, [sp]
  72 0082 5348     		ldr	r0, .L8+32
  73 0084 FFF7FEFF 		bl	xTaskGenericCreate
  74 0088 2B46     		mov	r3, r5
  75 008a 8022     		movs	r2, #128
  76 008c 5149     		ldr	r1, .L8+36
  77 008e CDE90255 		strd	r5, r5, [sp, #8]
  78 0092 0195     		str	r5, [sp, #4]
  79 0094 0096     		str	r6, [sp]
  80 0096 5048     		ldr	r0, .L8+40
  81 0098 FFF7FEFF 		bl	xTaskGenericCreate
  82 009c 2846     		mov	r0, r5
  83 009e FFF7FEFF 		bl	hardware_actuators
  84 00a2 4E49     		ldr	r1, .L8+44
  85 00a4 FFF7FEFF 		bl	actuator_set_event
  86 00a8 2846     		mov	r0, r5
  87 00aa FFF7FEFF 		bl	hardware_actuators
  88 00ae EF21     		movs	r1, #239
  89 00b0 FFF7FEFF 		bl	actuator_enable_event
  90 00b4 3046     		mov	r0, r6
  91 00b6 FFF7FEFF 		bl	hardware_actuators
  92 00ba 4849     		ldr	r1, .L8+44
  93 00bc FFF7FEFF 		bl	actuator_set_event
  94 00c0 3046     		mov	r0, r6
  95 00c2 FFF7FEFF 		bl	hardware_actuators
  96 00c6 EF21     		movs	r1, #239
  97 00c8 FFF7FEFF 		bl	actuator_enable_event
  98 00cc 434D     		ldr	r5, .L8+44
  99              	.L2:
 100 00ce 2046     		mov	r0, r4
 101 00d0 FFF7FEFF 		bl	hardware_actuators
 102 00d4 2946     		mov	r1, r5
 103 00d6 FFF7FEFF 		bl	actuator_set_event
 104 00da 2046     		mov	r0, r4
 105 00dc 0134     		adds	r4, r4, #1
 106 00de FFF7FEFF 		bl	hardware_actuators
 107 00e2 E4B2     		uxtb	r4, r4
 108 00e4 0F21     		movs	r1, #15
 109 00e6 FFF7FEFF 		bl	actuator_enable_event
 110 00ea 092C     		cmp	r4, #9
 111 00ec EFD1     		bne	.L2
 112 00ee 3B4D     		ldr	r5, .L8+44
 113              	.L3:
 114 00f0 2046     		mov	r0, r4
 115 00f2 FFF7FEFF 		bl	hardware_actuators
 116 00f6 2946     		mov	r1, r5
 117 00f8 FFF7FEFF 		bl	actuator_set_event
 118 00fc 2046     		mov	r0, r4
 119 00fe 0134     		adds	r4, r4, #1
 120 0100 FFF7FEFF 		bl	hardware_actuators
 121 0104 E4B2     		uxtb	r4, r4
 122 0106 8021     		movs	r1, #128
 123 0108 FFF7FEFF 		bl	actuator_enable_event
 124 010c 112C     		cmp	r4, #17
 125 010e EFD1     		bne	.L3
 126 0110 3349     		ldr	r1, .L8+48
 127 0112 3448     		ldr	r0, .L8+52
 128 0114 FFF7FEFF 		bl	protocol_add_command
 129 0118 3349     		ldr	r1, .L8+56
 130 011a 3448     		ldr	r0, .L8+60
 131 011c FFF7FEFF 		bl	protocol_add_command
 132 0120 3349     		ldr	r1, .L8+64
 133 0122 3448     		ldr	r0, .L8+68
 134 0124 FFF7FEFF 		bl	protocol_add_command
 135 0128 3349     		ldr	r1, .L8+72
 136 012a 3448     		ldr	r0, .L8+76
 137 012c FFF7FEFF 		bl	protocol_add_command
 138 0130 3349     		ldr	r1, .L8+80
 139 0132 3448     		ldr	r0, .L8+84
 140 0134 FFF7FEFF 		bl	protocol_add_command
 141 0138 3349     		ldr	r1, .L8+88
 142 013a 3448     		ldr	r0, .L8+92
 143 013c FFF7FEFF 		bl	protocol_add_command
 144 0140 3349     		ldr	r1, .L8+96
 145 0142 3448     		ldr	r0, .L8+100
 146 0144 FFF7FEFF 		bl	protocol_add_command
 147 0148 3149     		ldr	r1, .L8+96
 148 014a 3348     		ldr	r0, .L8+104
 149 014c FFF7FEFF 		bl	protocol_add_command
 150 0150 3249     		ldr	r1, .L8+108
 151 0152 3348     		ldr	r0, .L8+112
 152 0154 FFF7FEFF 		bl	protocol_add_command
 153 0158 3249     		ldr	r1, .L8+116
 154 015a 3348     		ldr	r0, .L8+120
 155 015c FFF7FEFF 		bl	protocol_add_command
 156 0160 3249     		ldr	r1, .L8+124
 157 0162 3348     		ldr	r0, .L8+128
 158 0164 FFF7FEFF 		bl	protocol_add_command
 159 0168 3249     		ldr	r1, .L8+132
 160 016a 3348     		ldr	r0, .L8+136
 161 016c FFF7FEFF 		bl	protocol_add_command
 162 0170 3249     		ldr	r1, .L8+140
 163 0172 3348     		ldr	r0, .L8+144
 164 0174 FFF7FEFF 		bl	protocol_add_command
 165 0178 3249     		ldr	r1, .L8+148
 166 017a 3348     		ldr	r0, .L8+152
 167 017c FFF7FEFF 		bl	protocol_add_command
 168 0180 3249     		ldr	r1, .L8+156
 169 0182 3348     		ldr	r0, .L8+160
 170 0184 FFF7FEFF 		bl	protocol_add_command
 171 0188 3249     		ldr	r1, .L8+164
 172 018a 3348     		ldr	r0, .L8+168
 173 018c FFF7FEFF 		bl	protocol_add_command
 174 0190 3249     		ldr	r1, .L8+172
 175 0192 3348     		ldr	r0, .L8+176
 176 0194 FFF7FEFF 		bl	protocol_add_command
 177 0198 3249     		ldr	r1, .L8+180
 178 019a 3348     		ldr	r0, .L8+184
 179 019c FFF7FEFF 		bl	protocol_add_command
 180 01a0 FFF7FEFF 		bl	naveg_init
 181 01a4 0020     		movs	r0, #0
 182 01a6 04B0     		add	sp, sp, #16
 183              		@ sp needed
 184 01a8 BDE87040 		pop	{r4, r5, r6, lr}
 185 01ac FFF7FEBF 		b	vTaskDelete
 186              	.L9:
 187              		.align	2
 188              	.L8:
 189 01b0 00000000 		.word	mod_logo
 190 01b4 00000000 		.word	mod_duo
 191 01b8 00000000 		.word	.LANCHOR0
 192 01bc 00000000 		.word	.LC0
 193 01c0 00000000 		.word	procotol_task
 194 01c4 04000000 		.word	.LC1
 195 01c8 00000000 		.word	actuators_task
 196 01cc 08000000 		.word	.LC2
 197 01d0 00000000 		.word	cli_task
 198 01d4 0C000000 		.word	.LC3
 199 01d8 00000000 		.word	displays_task
 200 01dc 00000000 		.word	actuators_cb
 201 01e0 00000000 		.word	ping_cb
 202 01e4 14000000 		.word	.LC4
 203 01e8 00000000 		.word	say_cb
 204 01ec 1C000000 		.word	.LC5
 205 01f0 00000000 		.word	led_cb
 206 01f4 28000000 		.word	.LC6
 207 01f8 00000000 		.word	glcd_text_cb
 208 01fc 3C000000 		.word	.LC7
 209 0200 00000000 		.word	glcd_dialog_cb
 210 0204 54000000 		.word	.LC8
 211 0208 00000000 		.word	glcd_draw_cb
 212 020c 64000000 		.word	.LC9
 213 0210 00000000 		.word	gui_connection_cb
 214 0214 7C000000 		.word	.LC10
 215 0218 84000000 		.word	.LC11
 216 021c 00000000 		.word	control_add_cb
 217 0220 8C000000 		.word	.LC12
 218 0224 00000000 		.word	control_rm_cb
 219 0228 B8000000 		.word	.LC13
 220 022c 00000000 		.word	control_set_cb
 221 0230 CC000000 		.word	.LC14
 222 0234 00000000 		.word	control_get_cb
 223 0238 E0000000 		.word	.LC15
 224 023c 00000000 		.word	initial_state_cb
 225 0240 F0000000 		.word	.LC16
 226 0244 00000000 		.word	bank_config_cb
 227 0248 08010000 		.word	.LC17
 228 024c 00000000 		.word	tuner_cb
 229 0250 1C010000 		.word	.LC18
 230 0254 00000000 		.word	resp_cb
 231 0258 2C010000 		.word	.LC19
 232 025c 00000000 		.word	restore_cb
 233 0260 38010000 		.word	.LC20
 234 0264 00000000 		.word	boot_cb
 235 0268 40010000 		.word	.LC21
 237              		.align	1
 238              		.p2align 2,,3
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 242              		.fpu softvfp
 244              	boot_cb:
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247 026c 10B5     		push	{r4, lr}
 248 026e 0446     		mov	r4, r0
 249 0270 0520     		movs	r0, #5
 250 0272 FFF7FEFF 		bl	hardware_leds
 251 0276 0121     		movs	r1, #1
 252 0278 FFF7FEFF 		bl	ledz_on
 253 027c 0020     		movs	r0, #0
 254 027e FFF7FEFF 		bl	naveg_print_pb_name
 255 0282 0020     		movs	r0, #0
 256 0284 FFF7FEFF 		bl	naveg_master_volume
 257 0288 2146     		mov	r1, r4
 258 028a BDE81040 		pop	{r4, lr}
 259 028e 0148     		ldr	r0, .L12
 260 0290 FFF7FEBF 		b	protocol_response
 261              	.L13:
 262              		.align	2
 263              	.L12:
 264 0294 4C010000 		.word	.LC22
 266              		.align	1
 267              		.p2align 2,,3
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 271              		.fpu softvfp
 273              	say_cb:
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              		@ link register save eliminated.
 277 0298 0368     		ldr	r3, [r0]
 278 029a 0146     		mov	r1, r0
 279 029c 5868     		ldr	r0, [r3, #4]
 280 029e FFF7FEBF 		b	protocol_response
 282              		.align	1
 283 02a2 00BF     		.p2align 2,,3
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 287              		.fpu softvfp
 289              	ping_cb:
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              		@ link register save eliminated.
 293 02a4 0146     		mov	r1, r0
 294 02a6 0148     		ldr	r0, .L16
 295 02a8 FFF7FEBF 		b	protocol_response
 296              	.L17:
 297              		.align	2
 298              	.L16:
 299 02ac 4C010000 		.word	.LC22
 301              		.align	1
 302              		.p2align 2,,3
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu softvfp
 308              	restore_cb:
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311 02b0 10B5     		push	{r4, lr}
 312 02b2 0446     		mov	r4, r0
 313 02b4 0020     		movs	r0, #0
 314 02b6 FFF7FEFF 		bl	cli_restore
 315 02ba 2146     		mov	r1, r4
 316 02bc BDE81040 		pop	{r4, lr}
 317 02c0 0148     		ldr	r0, .L20
 318 02c2 FFF7FEBF 		b	protocol_response
 319              	.L21:
 320 02c6 00BF     		.align	2
 321              	.L20:
 322 02c8 4C010000 		.word	.LC22
 324              		.align	1
 325              		.p2align 2,,3
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.fpu softvfp
 331              	resp_cb:
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335 02cc 0068     		ldr	r0, [r0]
 336 02ce FFF7FEBF 		b	comm_webgui_response_cb
 338              		.global	__aeabi_d2f
 339              		.align	1
 340 02d2 00BF     		.p2align 2,,3
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu softvfp
 346              	tuner_cb:
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349 02d4 0368     		ldr	r3, [r0]
 350 02d6 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 351 02da 0446     		mov	r4, r0
 352 02dc 5868     		ldr	r0, [r3, #4]
 353 02de FFF7FEFF 		bl	atof
 354 02e2 2368     		ldr	r3, [r4]
 355 02e4 0646     		mov	r6, r0
 356 02e6 D3E90250 		ldrd	r5, r0, [r3, #8]
 357 02ea 0F46     		mov	r7, r1
 358 02ec FFF7FEFF 		bl	atoi
 359 02f0 3946     		mov	r1, r7
 360 02f2 4FFA80F8 		sxtb	r8, r0
 361 02f6 3046     		mov	r0, r6
 362 02f8 FFF7FEFF 		bl	__aeabi_d2f
 363 02fc 2946     		mov	r1, r5
 364 02fe 4246     		mov	r2, r8
 365 0300 FFF7FEFF 		bl	screen_tuner
 366 0304 2146     		mov	r1, r4
 367 0306 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 368 030a 0148     		ldr	r0, .L25
 369 030c FFF7FEBF 		b	protocol_response
 370              	.L26:
 371              		.align	2
 372              	.L25:
 373 0310 4C010000 		.word	.LC22
 375              		.align	1
 376              		.p2align 2,,3
 377              		.syntax unified
 378              		.thumb
 379              		.thumb_func
 380              		.fpu softvfp
 382              	bank_config_cb:
 383              		@ args = 0, pretend = 0, frame = 8
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385 0314 10B5     		push	{r4, lr}
 386 0316 0368     		ldr	r3, [r0]
 387 0318 0446     		mov	r4, r0
 388 031a 82B0     		sub	sp, sp, #8
 389 031c 5868     		ldr	r0, [r3, #4]
 390 031e FFF7FEFF 		bl	atoi
 391 0322 2368     		ldr	r3, [r4]
 392 0324 8DF80400 		strb	r0, [sp, #4]
 393 0328 9868     		ldr	r0, [r3, #8]
 394 032a FFF7FEFF 		bl	atoi
 395 032e 8DF80500 		strb	r0, [sp, #5]
 396 0332 01A8     		add	r0, sp, #4
 397 0334 FFF7FEFF 		bl	naveg_bank_config
 398 0338 2146     		mov	r1, r4
 399 033a 0248     		ldr	r0, .L29
 400 033c FFF7FEFF 		bl	protocol_response
 401 0340 02B0     		add	sp, sp, #8
 402              		@ sp needed
 403 0342 10BD     		pop	{r4, pc}
 404              	.L30:
 405              		.align	2
 406              	.L29:
 407 0344 4C010000 		.word	.LC22
 409              		.align	1
 410              		.p2align 2,,3
 411              		.syntax unified
 412              		.thumb
 413              		.thumb_func
 414              		.fpu softvfp
 416              	initial_state_cb:
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419 0348 10B5     		push	{r4, lr}
 420 034a 0446     		mov	r4, r0
 421 034c 0368     		ldr	r3, [r0]
 422 034e D3E90101 		ldrd	r0, r1, [r3, #4]
 423 0352 03F10C02 		add	r2, r3, #12
 424 0356 FFF7FEFF 		bl	naveg_initial_state
 425 035a 2146     		mov	r1, r4
 426 035c BDE81040 		pop	{r4, lr}
 427 0360 0148     		ldr	r0, .L33
 428 0362 FFF7FEBF 		b	protocol_response
 429              	.L34:
 430 0366 00BF     		.align	2
 431              	.L33:
 432 0368 4C010000 		.word	.LC22
 434              		.align	1
 435              		.p2align 2,,3
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 439              		.fpu softvfp
 441              	control_get_cb:
 442              		@ args = 0, pretend = 0, frame = 32
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444 036c 70B5     		push	{r4, r5, r6, lr}
 445 036e 0368     		ldr	r3, [r0]
 446 0370 88B0     		sub	sp, sp, #32
 447 0372 0546     		mov	r5, r0
 448 0374 5868     		ldr	r0, [r3, #4]
 449 0376 FFF7FEFF 		bl	atoi
 450 037a C0B2     		uxtb	r0, r0
 451 037c FFF7FEFF 		bl	naveg_get_control
 452 0380 6C46     		mov	r4, sp
 453 0382 0646     		mov	r6, r0
 454 0384 084A     		ldr	r2, .L37
 455 0386 0323     		movs	r3, #3
 456 0388 92E80300 		ldm	r2, {r0, r1}
 457 038c 0822     		movs	r2, #8
 458 038e 84E80300 		stm	r4, {r0, r1}
 459 0392 0DF10701 		add	r1, sp, #7
 460 0396 3046     		mov	r0, r6
 461 0398 FFF7FEFF 		bl	float_to_str
 462 039c 2946     		mov	r1, r5
 463 039e 2046     		mov	r0, r4
 464 03a0 FFF7FEFF 		bl	protocol_response
 465 03a4 08B0     		add	sp, sp, #32
 466              		@ sp needed
 467 03a6 70BD     		pop	{r4, r5, r6, pc}
 468              	.L38:
 469              		.align	2
 470              	.L37:
 471 03a8 54010000 		.word	.LC23
 473              		.align	1
 474              		.p2align 2,,3
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 478              		.fpu softvfp
 480              	control_set_cb:
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483 03ac 38B5     		push	{r3, r4, r5, lr}
 484 03ae 0368     		ldr	r3, [r0]
 485 03b0 0446     		mov	r4, r0
 486 03b2 5868     		ldr	r0, [r3, #4]
 487 03b4 FFF7FEFF 		bl	atoi
 488 03b8 2368     		ldr	r3, [r4]
 489 03ba 0546     		mov	r5, r0
 490 03bc 9868     		ldr	r0, [r3, #8]
 491 03be FFF7FEFF 		bl	atof
 492 03c2 FFF7FEFF 		bl	__aeabi_d2f
 493 03c6 0146     		mov	r1, r0
 494 03c8 E8B2     		uxtb	r0, r5
 495 03ca FFF7FEFF 		bl	naveg_set_control
 496 03ce 2146     		mov	r1, r4
 497 03d0 BDE83840 		pop	{r3, r4, r5, lr}
 498 03d4 0148     		ldr	r0, .L41
 499 03d6 FFF7FEBF 		b	protocol_response
 500              	.L42:
 501 03da 00BF     		.align	2
 502              	.L41:
 503 03dc 4C010000 		.word	.LC22
 505              		.align	1
 506              		.p2align 2,,3
 507              		.syntax unified
 508              		.thumb
 509              		.thumb_func
 510              		.fpu softvfp
 512              	control_rm_cb:
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515 03e0 38B5     		push	{r3, r4, r5, lr}
 516 03e2 0368     		ldr	r3, [r0]
 517 03e4 0546     		mov	r5, r0
 518 03e6 5868     		ldr	r0, [r3, #4]
 519 03e8 FFF7FEFF 		bl	atoi
 520 03ec C0B2     		uxtb	r0, r0
 521 03ee 0824     		movs	r4, #8
 522 03f0 FFF7FEFF 		bl	naveg_remove_control
 523 03f4 09E0     		b	.L45
 524              	.L51:
 525 03f6 2B68     		ldr	r3, [r5]
 526 03f8 1859     		ldr	r0, [r3, r4]
 527 03fa FFF7FEFF 		bl	atoi
 528 03fe 0434     		adds	r4, r4, #4
 529 0400 C0B2     		uxtb	r0, r0
 530 0402 FFF7FEFF 		bl	naveg_remove_control
 531 0406 482C     		cmp	r4, #72
 532 0408 05D0     		beq	.L44
 533              	.L45:
 534 040a 2B68     		ldr	r3, [r5]
 535 040c 1859     		ldr	r0, [r3, r4]
 536 040e FFF7FEFF 		bl	atoi
 537 0412 0028     		cmp	r0, #0
 538 0414 EFD1     		bne	.L51
 539              	.L44:
 540 0416 2946     		mov	r1, r5
 541 0418 BDE83840 		pop	{r3, r4, r5, lr}
 542 041c 0148     		ldr	r0, .L52
 543 041e FFF7FEBF 		b	protocol_response
 544              	.L53:
 545 0422 00BF     		.align	2
 546              	.L52:
 547 0424 4C010000 		.word	.LC22
 549              		.align	1
 550              		.p2align 2,,3
 551              		.syntax unified
 552              		.thumb
 553              		.thumb_func
 554              		.fpu softvfp
 556              	control_add_cb:
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559 0428 10B5     		push	{r4, lr}
 560 042a 0446     		mov	r4, r0
 561 042c 0068     		ldr	r0, [r0]
 562 042e FFF7FEFF 		bl	data_parse_control
 563 0432 FFF7FEFF 		bl	naveg_add_control
 564 0436 2146     		mov	r1, r4
 565 0438 BDE81040 		pop	{r4, lr}
 566 043c 0148     		ldr	r0, .L56
 567 043e FFF7FEBF 		b	protocol_response
 568              	.L57:
 569 0442 00BF     		.align	2
 570              	.L56:
 571 0444 4C010000 		.word	.LC22
 573              		.align	1
 574              		.p2align 2,,3
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 578              		.fpu softvfp
 580              	gui_connection_cb:
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583 0448 0368     		ldr	r3, [r0]
 584 044a 10B5     		push	{r4, lr}
 585 044c 0B49     		ldr	r1, .L63
 586 044e 0446     		mov	r4, r0
 587 0450 1868     		ldr	r0, [r3]
 588 0452 FFF7FEFF 		bl	strcmp
 589 0456 40B1     		cbz	r0, .L62
 590 0458 0020     		movs	r0, #0
 591 045a FFF7FEFF 		bl	naveg_ui_connection
 592 045e 2146     		mov	r1, r4
 593 0460 BDE81040 		pop	{r4, lr}
 594 0464 0648     		ldr	r0, .L63+4
 595 0466 FFF7FEBF 		b	protocol_response
 596              	.L62:
 597 046a 0120     		movs	r0, #1
 598 046c FFF7FEFF 		bl	naveg_ui_connection
 599 0470 2146     		mov	r1, r4
 600 0472 BDE81040 		pop	{r4, lr}
 601 0476 0248     		ldr	r0, .L63+4
 602 0478 FFF7FEBF 		b	protocol_response
 603              	.L64:
 604              		.align	2
 605              	.L63:
 606 047c 7C000000 		.word	.LC10
 607 0480 4C010000 		.word	.LC22
 609              		.align	1
 610              		.p2align 2,,3
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 614              		.fpu softvfp
 616              	glcd_draw_cb:
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619 0484 F0B5     		push	{r4, r5, r6, r7, lr}
 620 0486 0368     		ldr	r3, [r0]
 621 0488 0446     		mov	r4, r0
 622 048a 83B0     		sub	sp, sp, #12
 623 048c 5868     		ldr	r0, [r3, #4]
 624 048e FFF7FEFF 		bl	atoi
 625 0492 2368     		ldr	r3, [r4]
 626 0494 C5B2     		uxtb	r5, r0
 627 0496 9868     		ldr	r0, [r3, #8]
 628 0498 FFF7FEFF 		bl	atoi
 629 049c 2368     		ldr	r3, [r4]
 630 049e 0646     		mov	r6, r0
 631 04a0 D868     		ldr	r0, [r3, #12]
 632 04a2 FFF7FEFF 		bl	atoi
 633 04a6 012D     		cmp	r5, #1
 634 04a8 01D9     		bls	.L68
 635 04aa 03B0     		add	sp, sp, #12
 636              		@ sp needed
 637 04ac F0BD     		pop	{r4, r5, r6, r7, pc}
 638              	.L68:
 639 04ae 2368     		ldr	r3, [r4]
 640 04b0 0746     		mov	r7, r0
 641 04b2 4FF48052 		mov	r2, #4096
 642 04b6 1869     		ldr	r0, [r3, #16]
 643 04b8 0949     		ldr	r1, .L69
 644 04ba FFF7FEFF 		bl	str_to_hex
 645 04be 2846     		mov	r0, r5
 646 04c0 FFF7FEFF 		bl	hardware_glcds
 647 04c4 0123     		movs	r3, #1
 648 04c6 F1B2     		uxtb	r1, r6
 649 04c8 0093     		str	r3, [sp]
 650 04ca FAB2     		uxtb	r2, r7
 651 04cc 044B     		ldr	r3, .L69
 652 04ce FFF7FEFF 		bl	uc1701_draw_image
 653 04d2 2146     		mov	r1, r4
 654 04d4 0348     		ldr	r0, .L69+4
 655 04d6 03B0     		add	sp, sp, #12
 656              		@ sp needed
 657 04d8 BDE8F040 		pop	{r4, r5, r6, r7, lr}
 658 04dc FFF7FEBF 		b	protocol_response
 659              	.L70:
 660              		.align	2
 661              	.L69:
 662 04e0 34000000 		.word	g_msg_buffer
 663 04e4 4C010000 		.word	.LC22
 665              		.align	1
 666              		.p2align 2,,3
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 670              		.fpu softvfp
 672              	glcd_dialog_cb:
 673              		@ args = 0, pretend = 0, frame = 16
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675 04e8 30B5     		push	{r4, r5, lr}
 676 04ea 0368     		ldr	r3, [r0]
 677 04ec 85B0     		sub	sp, sp, #20
 678 04ee 0446     		mov	r4, r0
 679 04f0 5868     		ldr	r0, [r3, #4]
 680 04f2 FFF7FEFF 		bl	naveg_dialog
 681 04f6 6A46     		mov	r2, sp
 682 04f8 0025     		movs	r5, #0
 683 04fa 0849     		ldr	r1, .L73
 684 04fc 00F13003 		add	r3, r0, #48
 685 0500 03C9     		ldm	r1, {r0, r1}
 686 0502 82E80300 		stm	r2, {r0, r1}
 687 0506 2146     		mov	r1, r4
 688 0508 1046     		mov	r0, r2
 689 050a 8DF80730 		strb	r3, [sp, #7]
 690 050e 8DF80850 		strb	r5, [sp, #8]
 691 0512 FFF7FEFF 		bl	protocol_response
 692 0516 05B0     		add	sp, sp, #20
 693              		@ sp needed
 694 0518 30BD     		pop	{r4, r5, pc}
 695              	.L74:
 696 051a 00BF     		.align	2
 697              	.L73:
 698 051c 54010000 		.word	.LC23
 700              		.align	1
 701              		.p2align 2,,3
 702              		.syntax unified
 703              		.thumb
 704              		.thumb_func
 705              		.fpu softvfp
 707              	glcd_text_cb:
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710 0520 F0B5     		push	{r4, r5, r6, r7, lr}
 711 0522 0368     		ldr	r3, [r0]
 712 0524 0446     		mov	r4, r0
 713 0526 83B0     		sub	sp, sp, #12
 714 0528 5868     		ldr	r0, [r3, #4]
 715 052a FFF7FEFF 		bl	atoi
 716 052e 2368     		ldr	r3, [r4]
 717 0530 C5B2     		uxtb	r5, r0
 718 0532 9868     		ldr	r0, [r3, #8]
 719 0534 FFF7FEFF 		bl	atoi
 720 0538 2368     		ldr	r3, [r4]
 721 053a 0646     		mov	r6, r0
 722 053c D868     		ldr	r0, [r3, #12]
 723 053e FFF7FEFF 		bl	atoi
 724 0542 012D     		cmp	r5, #1
 725 0544 01D9     		bls	.L78
 726 0546 03B0     		add	sp, sp, #12
 727              		@ sp needed
 728 0548 F0BD     		pop	{r4, r5, r6, r7, pc}
 729              	.L78:
 730 054a 0746     		mov	r7, r0
 731 054c 2846     		mov	r0, r5
 732 054e FFF7FEFF 		bl	hardware_glcds
 733 0552 0025     		movs	r5, #0
 734 0554 4FF0010C 		mov	ip, #1
 735 0558 2368     		ldr	r3, [r4]
 736 055a F1B2     		uxtb	r1, r6
 737 055c 1B69     		ldr	r3, [r3, #16]
 738 055e FAB2     		uxtb	r2, r7
 739 0560 CDE9005C 		strd	r5, ip, [sp]
 740 0564 FFF7FEFF 		bl	uc1701_text
 741 0568 2146     		mov	r1, r4
 742 056a 0348     		ldr	r0, .L79
 743 056c 03B0     		add	sp, sp, #12
 744              		@ sp needed
 745 056e BDE8F040 		pop	{r4, r5, r6, r7, lr}
 746 0572 FFF7FEBF 		b	protocol_response
 747              	.L80:
 748 0576 00BF     		.align	2
 749              	.L79:
 750 0578 4C010000 		.word	.LC22
 752              		.align	1
 753              		.p2align 2,,3
 754              		.syntax unified
 755              		.thumb
 756              		.thumb_func
 757              		.fpu softvfp
 759              	led_cb:
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762 057c 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 763 0580 0368     		ldr	r3, [r0]
 764 0582 82B0     		sub	sp, sp, #8
 765 0584 0446     		mov	r4, r0
 766 0586 5868     		ldr	r0, [r3, #4]
 767 0588 FFF7FEFF 		bl	atoi
 768 058c C0B2     		uxtb	r0, r0
 769 058e FFF7FEFF 		bl	hardware_leds
 770 0592 2368     		ldr	r3, [r4]
 771 0594 0546     		mov	r5, r0
 772 0596 9868     		ldr	r0, [r3, #8]
 773 0598 FFF7FEFF 		bl	atoi
 774 059c 0121     		movs	r1, #1
 775 059e 0246     		mov	r2, r0
 776 05a0 2846     		mov	r0, r5
 777 05a2 FFF7FEFF 		bl	ledz_set
 778 05a6 2368     		ldr	r3, [r4]
 779 05a8 D868     		ldr	r0, [r3, #12]
 780 05aa FFF7FEFF 		bl	atoi
 781 05ae 0221     		movs	r1, #2
 782 05b0 0246     		mov	r2, r0
 783 05b2 2846     		mov	r0, r5
 784 05b4 FFF7FEFF 		bl	ledz_set
 785 05b8 2368     		ldr	r3, [r4]
 786 05ba 1869     		ldr	r0, [r3, #16]
 787 05bc FFF7FEFF 		bl	atoi
 788 05c0 0421     		movs	r1, #4
 789 05c2 0246     		mov	r2, r0
 790 05c4 2846     		mov	r0, r5
 791 05c6 FFF7FEFF 		bl	ledz_set
 792 05ca 6668     		ldr	r6, [r4, #4]
 793 05cc 072E     		cmp	r6, #7
 794 05ce 06D0     		beq	.L84
 795              	.L82:
 796 05d0 2146     		mov	r1, r4
 797 05d2 0D48     		ldr	r0, .L85
 798 05d4 02B0     		add	sp, sp, #8
 799              		@ sp needed
 800 05d6 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 801 05da FFF7FEBF 		b	protocol_response
 802              	.L84:
 803 05de 2368     		ldr	r3, [r4]
 804 05e0 4FF0FF37 		mov	r7, #-1
 805 05e4 5869     		ldr	r0, [r3, #20]
 806 05e6 FFF7FEFF 		bl	atoi
 807 05ea 2368     		ldr	r3, [r4]
 808 05ec 8046     		mov	r8, r0
 809 05ee 9869     		ldr	r0, [r3, #24]
 810 05f0 FFF7FEFF 		bl	atoi
 811 05f4 1FFA88F2 		uxth	r2, r8
 812 05f8 83B2     		uxth	r3, r0
 813 05fa 3146     		mov	r1, r6
 814 05fc 2846     		mov	r0, r5
 815 05fe 0097     		str	r7, [sp]
 816 0600 FFF7FEFF 		bl	ledz_blink
 817 0604 E4E7     		b	.L82
 818              	.L86:
 819 0606 00BF     		.align	2
 820              	.L85:
 821 0608 4C010000 		.word	.LC22
 823              		.align	1
 824              		.p2align 2,,3
 825              		.syntax unified
 826              		.thumb
 827              		.thumb_func
 828              		.fpu softvfp
 830              	actuators_cb:
 831              		@ args = 0, pretend = 0, frame = 8
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833 060c 70B5     		push	{r4, r5, r6, lr}
 834 060e 184C     		ldr	r4, .L99
 835 0610 82B0     		sub	sp, sp, #8
 836 0612 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 837 0614 04F10801 		add	r1, r4, #8
 838 0618 531C     		adds	r3, r2, #1
 839 061a DBB2     		uxtb	r3, r3
 840 061c 0A2B     		cmp	r3, #10
 841 061e 08BF     		it	eq
 842 0620 0023     		moveq	r3, #0
 843 0622 2371     		strb	r3, [r4, #4]
 844 0624 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 845 0626 01EB8206 		add	r6, r1, r2, lsl #2
 846 062a 01F82230 		strb	r3, [r1, r2, lsl #2]
 847 062e 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 848 0630 0546     		mov	r5, r0
 849 0632 7370     		strb	r3, [r6, #1]
 850 0634 0096     		str	r6, [sp]
 851 0636 FFF7FEFF 		bl	actuator_get_status
 852 063a 0023     		movs	r3, #0
 853 063c B070     		strb	r0, [r6, #2]
 854 063e 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 855 0640 0193     		str	r3, [sp, #4]
 856 0642 012A     		cmp	r2, #1
 857 0644 0CD9     		bls	.L98
 858 0646 2068     		ldr	r0, [r4]
 859 0648 01AA     		add	r2, sp, #4
 860 064a 6946     		mov	r1, sp
 861 064c FFF7FEFF 		bl	xQueueGenericSendFromISR
 862              	.L91:
 863 0650 019B     		ldr	r3, [sp, #4]
 864 0652 1BB1     		cbz	r3, .L87
 865 0654 4FF08052 		mov	r2, #268435456
 866 0658 064B     		ldr	r3, .L99+4
 867 065a 1A60     		str	r2, [r3]
 868              	.L87:
 869 065c 02B0     		add	sp, sp, #8
 870              		@ sp needed
 871 065e 70BD     		pop	{r4, r5, r6, pc}
 872              	.L98:
 873 0660 1A46     		mov	r2, r3
 874 0662 2068     		ldr	r0, [r4]
 875 0664 0223     		movs	r3, #2
 876 0666 6946     		mov	r1, sp
 877 0668 FFF7FEFF 		bl	xQueueGenericSend
 878 066c F0E7     		b	.L91
 879              	.L100:
 880 066e 00BF     		.align	2
 881              	.L99:
 882 0670 00000000 		.word	.LANCHOR0
 883 0674 04ED00E0 		.word	-536810236
 885              		.align	1
 886              		.p2align 2,,3
 887              		.syntax unified
 888              		.thumb
 889              		.thumb_func
 890              		.fpu softvfp
 892              	displays_task:
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895 0678 70B5     		push	{r4, r5, r6, lr}
 896 067a 0024     		movs	r4, #0
 897 067c 0C4E     		ldr	r6, .L108
 898 067e 2546     		mov	r5, r4
 899 0680 03E0     		b	.L103
 900              	.L107:
 901 0682 B442     		cmp	r4, r6
 902 0684 0FD0     		beq	.L106
 903              	.L102:
 904 0686 FFF7FEFF 		bl	vPortYield
 905              	.L103:
 906 068a 2846     		mov	r0, r5
 907 068c FFF7FEFF 		bl	hardware_glcds
 908 0690 FFF7FEFF 		bl	uc1701_update
 909 0694 FFF7FEFF 		bl	naveg_need_update
 910 0698 0134     		adds	r4, r4, #1
 911 069a 85F00105 		eor	r5, r5, #1
 912 069e 0028     		cmp	r0, #0
 913 06a0 EFD1     		bne	.L107
 914 06a2 0446     		mov	r4, r0
 915 06a4 EFE7     		b	.L102
 916              	.L106:
 917 06a6 FFF7FEFF 		bl	naveg_update
 918 06aa 0024     		movs	r4, #0
 919 06ac EBE7     		b	.L102
 920              	.L109:
 921 06ae 00BF     		.align	2
 922              	.L108:
 923 06b0 20A10700 		.word	500000
 925              		.align	1
 926              		.p2align 2,,3
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 930              		.fpu softvfp
 932              	cli_task:
 933              		@ Volatile: function does not return.
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936 06b4 08B5     		push	{r3, lr}
 937              	.L111:
 938 06b6 FFF7FEFF 		bl	cli_process
 939 06ba FCE7     		b	.L111
 941              		.align	1
 942              		.p2align 2,,3
 943              		.syntax unified
 944              		.thumb
 945              		.thumb_func
 946              		.fpu softvfp
 948              	actuators_task:
 949              		@ args = 0, pretend = 0, frame = 8
 950              		@ frame_needed = 0, uses_anonymous_args = 0
 951 06bc F0B5     		push	{r4, r5, r6, r7, lr}
 952 06be 474C     		ldr	r4, .L166
 953 06c0 83B0     		sub	sp, sp, #12
 954 06c2 01E0     		b	.L117
 955              	.L116:
 956 06c4 012D     		cmp	r5, #1
 957 06c6 14D0     		beq	.L157
 958              	.L117:
 959 06c8 94F83030 		ldrb	r3, [r4, #48]	@ zero_extendqisi2
 960 06cc 002B     		cmp	r3, #0
 961 06ce 33D1     		bne	.L113
 962 06d0 4FF0FF32 		mov	r2, #-1
 963 06d4 01A9     		add	r1, sp, #4
 964 06d6 2068     		ldr	r0, [r4]
 965 06d8 FFF7FEFF 		bl	xQueueGenericReceive
 966 06dc 0546     		mov	r5, r0
 967 06de 0120     		movs	r0, #1
 968 06e0 FFF7FEFF 		bl	cli_restore
 969 06e4 0028     		cmp	r0, #0
 970 06e6 EDD1     		bne	.L116
 971 06e8 0220     		movs	r0, #2
 972 06ea FFF7FEFF 		bl	cli_restore
 973 06ee 012D     		cmp	r5, #1
 974 06f0 EAD1     		bne	.L117
 975              	.L157:
 976 06f2 2846     		mov	r0, r5
 977 06f4 FFF7FEFF 		bl	cli_restore
 978 06f8 0128     		cmp	r0, #1
 979 06fa E5D1     		bne	.L117
 980 06fc 019B     		ldr	r3, [sp, #4]
 981 06fe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 982 0700 5F78     		ldrb	r7, [r3, #1]	@ zero_extendqisi2
 983 0702 012A     		cmp	r2, #1
 984 0704 9E78     		ldrb	r6, [r3, #2]	@ zero_extendqisi2
 985 0706 24D0     		beq	.L158
 986 0708 022A     		cmp	r2, #2
 987 070a 17D0     		beq	.L159
 988 070c 002A     		cmp	r2, #0
 989 070e DBD1     		bne	.L117
 990 0710 B107     		lsls	r1, r6, #30
 991 0712 48D4     		bmi	.L160
 992              	.L131:
 993 0714 7207     		lsls	r2, r6, #29
 994 0716 41D4     		bmi	.L161
 995              	.L132:
 996 0718 3307     		lsls	r3, r6, #28
 997 071a 04D5     		bpl	.L133
 998 071c 032F     		cmp	r7, #3
 999 071e 02D9     		bls	.L133
 1000 0720 3846     		mov	r0, r7
 1001 0722 FFF7FEFF 		bl	naveg_save_page
 1002              	.L133:
 1003 0726 012F     		cmp	r7, #1
 1004 0728 94BF     		ite	ls
 1005 072a 0020     		movls	r0, #0
 1006 072c 0120     		movhi	r0, #1
 1007 072e FFF7FEFF 		bl	hardware_glcds
 1008 0732 FFF7FEFF 		bl	uc1701_update
 1009 0736 C7E7     		b	.L117
 1010              	.L113:
 1011 0738 03B0     		add	sp, sp, #12
 1012              		@ sp needed
 1013 073a F0BD     		pop	{r4, r5, r6, r7, pc}
 1014              	.L159:
 1015 073c 3506     		lsls	r5, r6, #24
 1016 073e 49D4     		bmi	.L162
 1017              	.L130:
 1018 0740 032F     		cmp	r7, #3
 1019 0742 94BF     		ite	ls
 1020 0744 0020     		movls	r0, #0
 1021 0746 0120     		movhi	r0, #1
 1022 0748 FFF7FEFF 		bl	hardware_glcds
 1023 074c FFF7FEFF 		bl	uc1701_update
 1024 0750 BAE7     		b	.L117
 1025              	.L158:
 1026 0752 F507     		lsls	r5, r6, #31
 1027 0754 2CD4     		bmi	.L163
 1028              	.L120:
 1029 0756 3007     		lsls	r0, r6, #28
 1030 0758 0FD5     		bpl	.L121
 1031 075a D7B1     		cbz	r7, .L122
 1032 075c 3846     		mov	r0, r7
 1033 075e FFF7FEFF 		bl	naveg_master_volume
 1034 0762 7107     		lsls	r1, r6, #29
 1035 0764 0DD4     		bmi	.L123
 1036              	.L124:
 1037 0766 B306     		lsls	r3, r6, #26
 1038 0768 2DD4     		bmi	.L164
 1039              	.L127:
 1040 076a 7606     		lsls	r6, r6, #25
 1041 076c 24D4     		bmi	.L165
 1042              	.L128:
 1043 076e 3846     		mov	r0, r7
 1044 0770 FFF7FEFF 		bl	hardware_glcds
 1045 0774 FFF7FEFF 		bl	uc1701_update
 1046 0778 A6E7     		b	.L117
 1047              	.L121:
 1048 077a 7207     		lsls	r2, r6, #29
 1049 077c F3D5     		bpl	.L124
 1050 077e 002F     		cmp	r7, #0
 1051 0780 F1D0     		beq	.L124
 1052              	.L123:
 1053 0782 FFF7FEFF 		bl	naveg_is_master_vol
 1054 0786 0028     		cmp	r0, #0
 1055 0788 EDD0     		beq	.L124
 1056 078a 3846     		mov	r0, r7
 1057 078c FFF7FEFF 		bl	naveg_master_volume
 1058 0790 E9E7     		b	.L124
 1059              	.L122:
 1060 0792 3946     		mov	r1, r7
 1061 0794 3846     		mov	r0, r7
 1062 0796 FFF7FEFF 		bl	naveg_toggle_tool
 1063 079a E4E7     		b	.L124
 1064              	.L161:
 1065 079c 0021     		movs	r1, #0
 1066 079e 3846     		mov	r0, r7
 1067 07a0 FFF7FEFF 		bl	naveg_foot_change
 1068 07a4 B8E7     		b	.L132
 1069              	.L160:
 1070 07a6 2946     		mov	r1, r5
 1071 07a8 3846     		mov	r0, r7
 1072 07aa FFF7FEFF 		bl	naveg_foot_change
 1073 07ae B1E7     		b	.L131
 1074              	.L163:
 1075 07b0 3846     		mov	r0, r7
 1076 07b2 FFF7FEFF 		bl	naveg_enter
 1077 07b6 CEE7     		b	.L120
 1078              	.L165:
 1079 07b8 3846     		mov	r0, r7
 1080 07ba FFF7FEFF 		bl	naveg_dec_control
 1081 07be 3846     		mov	r0, r7
 1082 07c0 FFF7FEFF 		bl	naveg_up
 1083 07c4 D3E7     		b	.L128
 1084              	.L164:
 1085 07c6 3846     		mov	r0, r7
 1086 07c8 FFF7FEFF 		bl	naveg_inc_control
 1087 07cc 3846     		mov	r0, r7
 1088 07ce FFF7FEFF 		bl	naveg_down
 1089 07d2 CAE7     		b	.L127
 1090              	.L162:
 1091 07d4 3846     		mov	r0, r7
 1092 07d6 FFF7FEFF 		bl	naveg_pot_change
 1093 07da B1E7     		b	.L130
 1094              	.L167:
 1095              		.align	2
 1096              	.L166:
 1097 07dc 00000000 		.word	.LANCHOR0
 1099              		.align	1
 1100              		.p2align 2,,3
 1101              		.syntax unified
 1102              		.thumb
 1103              		.thumb_func
 1104              		.fpu softvfp
 1106              	procotol_task:
 1107              		@ args = 0, pretend = 0, frame = 16
 1108              		@ frame_needed = 0, uses_anonymous_args = 0
 1109 07e0 F0B5     		push	{r4, r5, r6, r7, lr}
 1110 07e2 0E4F     		ldr	r7, .L174
 1111 07e4 0025     		movs	r5, #0
 1112 07e6 3E46     		mov	r6, r7
 1113 07e8 0D4C     		ldr	r4, .L174+4
 1114 07ea 85B0     		sub	sp, sp, #20
 1115              	.L169:
 1116 07ec 84F83050 		strb	r5, [r4, #48]
 1117 07f0 FFF7FEFF 		bl	comm_webgui_read
 1118 07f4 0023     		movs	r3, #0
 1119 07f6 4FF48052 		mov	r2, #4096
 1120 07fa 3146     		mov	r1, r6
 1121 07fc FFF7FEFF 		bl	ringbuff_read_until
 1122 0800 0346     		mov	r3, r0
 1123 0802 0028     		cmp	r0, #0
 1124 0804 F2D0     		beq	.L169
 1125 0806 0122     		movs	r2, #1
 1126 0808 01A8     		add	r0, sp, #4
 1127 080a CDE90157 		strd	r5, r7, [sp, #4]
 1128 080e 0393     		str	r3, [sp, #12]
 1129 0810 84F83020 		strb	r2, [r4, #48]
 1130 0814 FFF7FEFF 		bl	protocol_parse
 1131 0818 E8E7     		b	.L169
 1132              	.L175:
 1133 081a 00BF     		.align	2
 1134              	.L174:
 1135 081c 34000000 		.word	g_msg_buffer
 1136 0820 00000000 		.word	.LANCHOR0
 1138              		.section	.text.startup,"ax",%progbits
 1139              		.align	1
 1140              		.p2align 2,,3
 1141              		.global	main
 1142              		.syntax unified
 1143              		.thumb
 1144              		.thumb_func
 1145              		.fpu softvfp
 1147              	main:
 1148              		@ Volatile: function does not return.
 1149              		@ args = 0, pretend = 0, frame = 0
 1150              		@ frame_needed = 0, uses_anonymous_args = 0
 1151 0000 00B5     		push	{lr}
 1152 0002 85B0     		sub	sp, sp, #20
 1153 0004 FFF7FEFF 		bl	hardware_setup
 1154 0008 0023     		movs	r3, #0
 1155 000a 0122     		movs	r2, #1
 1156 000c CDE90233 		strd	r3, r3, [sp, #8]
 1157 0010 0193     		str	r3, [sp, #4]
 1158 0012 1946     		mov	r1, r3
 1159 0014 0092     		str	r2, [sp]
 1160 0016 0448     		ldr	r0, .L179
 1161 0018 4FF48072 		mov	r2, #256
 1162 001c FFF7FEFF 		bl	xTaskGenericCreate
 1163 0020 FFF7FEFF 		bl	vTaskStartScheduler
 1164              	.L177:
 1165 0024 FEE7     		b	.L177
 1166              	.L180:
 1167 0026 00BF     		.align	2
 1168              	.L179:
 1169 0028 00000000 		.word	setup_task
 1171              		.text
 1172              		.align	1
 1173              		.p2align 2,,3
 1174              		.global	serial_error
 1175              		.syntax unified
 1176              		.thumb
 1177              		.thumb_func
 1178              		.fpu softvfp
 1180              	serial_error:
 1181              		@ args = 0, pretend = 0, frame = 0
 1182              		@ frame_needed = 0, uses_anonymous_args = 0
 1183              		@ link register save eliminated.
 1184 0824 7047     		bx	lr
 1186              		.align	1
 1187 0826 00BF     		.p2align 2,,3
 1188              		.global	HardFault_Handler
 1189              		.syntax unified
 1190              		.thumb
 1191              		.thumb_func
 1192              		.fpu softvfp
 1194              	HardFault_Handler:
 1195              		@ Volatile: function does not return.
 1196              		@ args = 0, pretend = 0, frame = 0
 1197              		@ frame_needed = 0, uses_anonymous_args = 0
 1198 0828 08B5     		push	{r3, lr}
 1199 082a 0020     		movs	r0, #0
 1200 082c FFF7FEFF 		bl	hardware_leds
 1201 0830 0621     		movs	r1, #6
 1202 0832 FFF7FEFF 		bl	ledz_on
 1203              	.L183:
 1204 0836 FEE7     		b	.L183
 1206              		.align	1
 1207              		.p2align 2,,3
 1208              		.global	MemManage_Handler
 1209              		.syntax unified
 1210              		.thumb
 1211              		.thumb_func
 1212              		.fpu softvfp
 1214              	MemManage_Handler:
 1215              		@ Volatile: function does not return.
 1216              		@ args = 0, pretend = 0, frame = 0
 1217              		@ frame_needed = 0, uses_anonymous_args = 0
 1218 0838 08B5     		push	{r3, lr}
 1219 083a 0120     		movs	r0, #1
 1220 083c FFF7FEFF 		bl	hardware_leds
 1221 0840 0621     		movs	r1, #6
 1222 0842 FFF7FEFF 		bl	ledz_on
 1223              	.L186:
 1224 0846 FEE7     		b	.L186
 1226              		.align	1
 1227              		.p2align 2,,3
 1228              		.global	BusFault_Handler
 1229              		.syntax unified
 1230              		.thumb
 1231              		.thumb_func
 1232              		.fpu softvfp
 1234              	BusFault_Handler:
 1235              		@ Volatile: function does not return.
 1236              		@ args = 0, pretend = 0, frame = 0
 1237              		@ frame_needed = 0, uses_anonymous_args = 0
 1238 0848 08B5     		push	{r3, lr}
 1239 084a 0220     		movs	r0, #2
 1240 084c FFF7FEFF 		bl	hardware_leds
 1241 0850 0621     		movs	r1, #6
 1242 0852 FFF7FEFF 		bl	ledz_on
 1243              	.L189:
 1244 0856 FEE7     		b	.L189
 1246              		.align	1
 1247              		.p2align 2,,3
 1248              		.global	UsageFault_Handler
 1249              		.syntax unified
 1250              		.thumb
 1251              		.thumb_func
 1252              		.fpu softvfp
 1254              	UsageFault_Handler:
 1255              		@ Volatile: function does not return.
 1256              		@ args = 0, pretend = 0, frame = 0
 1257              		@ frame_needed = 0, uses_anonymous_args = 0
 1258 0858 08B5     		push	{r3, lr}
 1259 085a 0320     		movs	r0, #3
 1260 085c FFF7FEFF 		bl	hardware_leds
 1261 0860 0621     		movs	r1, #6
 1262 0862 FFF7FEFF 		bl	ledz_on
 1263              	.L192:
 1264 0866 FEE7     		b	.L192
 1266              		.align	1
 1267              		.p2align 2,,3
 1268              		.global	vApplicationMallocFailedHook
 1269              		.syntax unified
 1270              		.thumb
 1271              		.thumb_func
 1272              		.fpu softvfp
 1274              	vApplicationMallocFailedHook:
 1275              		@ Volatile: function does not return.
 1276              		@ args = 0, pretend = 0, frame = 0
 1277              		@ frame_needed = 0, uses_anonymous_args = 0
 1278 0868 08B5     		push	{r3, lr}
 1279 086a 0420     		movs	r0, #4
 1280 086c FFF7FEFF 		bl	hardware_leds
 1281 0870 0621     		movs	r1, #6
 1282 0872 FFF7FEFF 		bl	ledz_on
 1283              	.L195:
 1284 0876 FEE7     		b	.L195
 1286              		.align	1
 1287              		.p2align 2,,3
 1288              		.global	vApplicationStackOverflowHook
 1289              		.syntax unified
 1290              		.thumb
 1291              		.thumb_func
 1292              		.fpu softvfp
 1294              	vApplicationStackOverflowHook:
 1295              		@ args = 0, pretend = 0, frame = 0
 1296              		@ frame_needed = 0, uses_anonymous_args = 0
 1297 0878 F0B5     		push	{r4, r5, r6, r7, lr}
 1298 087a 0020     		movs	r0, #0
 1299 087c 83B0     		sub	sp, sp, #12
 1300 087e 0F46     		mov	r7, r1
 1301 0880 FFF7FEFF 		bl	hardware_glcds
 1302 0884 0024     		movs	r4, #0
 1303 0886 0546     		mov	r5, r0
 1304 0888 0126     		movs	r6, #1
 1305 088a 2146     		mov	r1, r4
 1306 088c FFF7FEFF 		bl	uc1701_clear
 1307 0890 2846     		mov	r0, r5
 1308 0892 2246     		mov	r2, r4
 1309 0894 2146     		mov	r1, r4
 1310 0896 0B4B     		ldr	r3, .L200
 1311 0898 CDE90046 		strd	r4, r6, [sp]
 1312 089c FFF7FEFF 		bl	uc1701_text
 1313 08a0 2146     		mov	r1, r4
 1314 08a2 3B46     		mov	r3, r7
 1315 08a4 0A22     		movs	r2, #10
 1316 08a6 2846     		mov	r0, r5
 1317 08a8 CDE90046 		strd	r4, r6, [sp]
 1318 08ac FFF7FEFF 		bl	uc1701_text
 1319 08b0 2846     		mov	r0, r5
 1320 08b2 FFF7FEFF 		bl	uc1701_update
 1321 08b6 0520     		movs	r0, #5
 1322 08b8 FFF7FEFF 		bl	hardware_leds
 1323 08bc 0621     		movs	r1, #6
 1324 08be FFF7FEFF 		bl	ledz_on
 1325              	.L198:
 1326 08c2 FEE7     		b	.L198
 1327              	.L201:
 1328              		.align	2
 1329              	.L200:
 1330 08c4 5C010000 		.word	.LC24
 1332              		.bss
 1333              		.align	2
 1334              		.set	.LANCHOR0,. + 0
 1337              	g_actuators_queue:
 1338 0000 00000000 		.space	4
 1341              	i.9822:
 1342 0004 00       		.space	1
 1343 0005 000000   		.space	3
 1346              	info.9823:
 1347 0008 00000000 		.space	40
 1347      00000000 
 1347      00000000 
 1347      00000000 
 1347      00000000 
 1350              	g_protocol_bussy:
 1351 0030 00       		.space	1
 1352 0031 000000   		.space	3
 1355              	g_msg_buffer:
 1356 0034 00000000 		.space	4096
 1356      00000000 
 1356      00000000 
 1356      00000000 
 1356      00000000 
 1357              		.section	.rodata.str1.4,"aMS",%progbits,1
 1358              		.align	2
 1359              	.LC0:
 1360 0000 70726F00 		.ascii	"pro\000"
 1361              	.LC1:
 1362 0004 61637400 		.ascii	"act\000"
 1363              	.LC2:
 1364 0008 636C6900 		.ascii	"cli\000"
 1365              	.LC3:
 1366 000c 64697370 		.ascii	"disp\000"
 1366      00
 1367 0011 000000   		.space	3
 1368              	.LC4:
 1369 0014 70696E67 		.ascii	"ping\000"
 1369      00
 1370 0019 000000   		.space	3
 1371              	.LC5:
 1372 001c 73617920 		.ascii	"say %s ...\000"
 1372      2573202E 
 1372      2E2E00
 1373 0027 00       		.space	1
 1374              	.LC6:
 1375 0028 6C656420 		.ascii	"led %i %i %i %i ...\000"
 1375      25692025 
 1375      69202569 
 1375      20256920 
 1375      2E2E2E00 
 1376              	.LC7:
 1377 003c 676C6364 		.ascii	"glcd_text %i %i %i %s\000"
 1377      5F746578 
 1377      74202569 
 1377      20256920 
 1377      25692025 
 1378 0052 0000     		.space	2
 1379              	.LC8:
 1380 0054 676C6364 		.ascii	"glcd_dialog %s\000"
 1380      5F646961 
 1380      6C6F6720 
 1380      257300
 1381 0063 00       		.space	1
 1382              	.LC9:
 1383 0064 676C6364 		.ascii	"glcd_draw %i %i %i %s\000"
 1383      5F647261 
 1383      77202569 
 1383      20256920 
 1383      25692025 
 1384 007a 0000     		.space	2
 1385              	.LC10:
 1386 007c 75695F63 		.ascii	"ui_con\000"
 1386      6F6E00
 1387 0083 00       		.space	1
 1388              	.LC11:
 1389 0084 75695F64 		.ascii	"ui_dis\000"
 1389      697300
 1390 008b 00       		.space	1
 1391              	.LC12:
 1392 008c 636F6E74 		.ascii	"control_add %i %s %i %s %f %f %f %i %i ...\000"
 1392      726F6C5F 
 1392      61646420 
 1392      25692025 
 1392      73202569 
 1393 00b7 00       		.space	1
 1394              	.LC13:
 1395 00b8 636F6E74 		.ascii	"control_rm %i ...\000"
 1395      726F6C5F 
 1395      726D2025 
 1395      69202E2E 
 1395      2E00
 1396 00ca 0000     		.space	2
 1397              	.LC14:
 1398 00cc 636F6E74 		.ascii	"control_set %i %f\000"
 1398      726F6C5F 
 1398      73657420 
 1398      25692025 
 1398      6600
 1399 00de 0000     		.space	2
 1400              	.LC15:
 1401 00e0 636F6E74 		.ascii	"control_get %i\000"
 1401      726F6C5F 
 1401      67657420 
 1401      256900
 1402 00ef 00       		.space	1
 1403              	.LC16:
 1404 00f0 696E6974 		.ascii	"initial_state %s %s ...\000"
 1404      69616C5F 
 1404      73746174 
 1404      65202573 
 1404      20257320 
 1405              	.LC17:
 1406 0108 62616E6B 		.ascii	"bank_config %i %i\000"
 1406      5F636F6E 
 1406      66696720 
 1406      25692025 
 1406      6900
 1407 011a 0000     		.space	2
 1408              	.LC18:
 1409 011c 74756E65 		.ascii	"tuner %f %s %i\000"
 1409      72202566 
 1409      20257320 
 1409      256900
 1410 012b 00       		.space	1
 1411              	.LC19:
 1412 012c 72657370 		.ascii	"resp %i ...\000"
 1412      20256920 
 1412      2E2E2E00 
 1413              	.LC20:
 1414 0138 72657374 		.ascii	"restore\000"
 1414      6F726500 
 1415              	.LC21:
 1416 0140 626F6F74 		.ascii	"boot %i %i\000"
 1416      20256920 
 1416      256900
 1417 014b 00       		.space	1
 1418              	.LC22:
 1419 014c 72657370 		.ascii	"resp 0\000"
 1419      203000
 1420 0153 00       		.space	1
 1421              	.LC23:
 1422 0154 72657370 		.ascii	"resp 0 \000"
 1422      20302000 
 1423              	.LC24:
 1424 015c 73746163 		.ascii	"stack overflow\000"
 1424      6B206F76 
 1424      6572666C 
 1424      6F7700
 1425              		.ident	"GCC: (GNU Tools for Arm Embedded Processors 7-2018-q3-update) 7.3.1 20180622 (release) [AR
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccGMQ9mf.s:13     .text:0000000000000000 $t
     /tmp/ccGMQ9mf.s:20     .text:0000000000000000 setup_task
     /tmp/ccGMQ9mf.s:189    .text:00000000000001b0 $d
     /tmp/ccGMQ9mf.s:1106   .text:00000000000007e0 procotol_task
     /tmp/ccGMQ9mf.s:948    .text:00000000000006bc actuators_task
     /tmp/ccGMQ9mf.s:932    .text:00000000000006b4 cli_task
     /tmp/ccGMQ9mf.s:892    .text:0000000000000678 displays_task
     /tmp/ccGMQ9mf.s:830    .text:000000000000060c actuators_cb
     /tmp/ccGMQ9mf.s:289    .text:00000000000002a4 ping_cb
     /tmp/ccGMQ9mf.s:273    .text:0000000000000298 say_cb
     /tmp/ccGMQ9mf.s:759    .text:000000000000057c led_cb
     /tmp/ccGMQ9mf.s:707    .text:0000000000000520 glcd_text_cb
     /tmp/ccGMQ9mf.s:672    .text:00000000000004e8 glcd_dialog_cb
     /tmp/ccGMQ9mf.s:616    .text:0000000000000484 glcd_draw_cb
     /tmp/ccGMQ9mf.s:580    .text:0000000000000448 gui_connection_cb
     /tmp/ccGMQ9mf.s:556    .text:0000000000000428 control_add_cb
     /tmp/ccGMQ9mf.s:512    .text:00000000000003e0 control_rm_cb
     /tmp/ccGMQ9mf.s:480    .text:00000000000003ac control_set_cb
     /tmp/ccGMQ9mf.s:441    .text:000000000000036c control_get_cb
     /tmp/ccGMQ9mf.s:416    .text:0000000000000348 initial_state_cb
     /tmp/ccGMQ9mf.s:382    .text:0000000000000314 bank_config_cb
     /tmp/ccGMQ9mf.s:346    .text:00000000000002d4 tuner_cb
     /tmp/ccGMQ9mf.s:331    .text:00000000000002cc resp_cb
     /tmp/ccGMQ9mf.s:308    .text:00000000000002b0 restore_cb
     /tmp/ccGMQ9mf.s:244    .text:000000000000026c boot_cb
     /tmp/ccGMQ9mf.s:237    .text:000000000000026c $t
     /tmp/ccGMQ9mf.s:264    .text:0000000000000294 $d
     /tmp/ccGMQ9mf.s:266    .text:0000000000000298 $t
     /tmp/ccGMQ9mf.s:299    .text:00000000000002ac $d
     /tmp/ccGMQ9mf.s:301    .text:00000000000002b0 $t
     /tmp/ccGMQ9mf.s:322    .text:00000000000002c8 $d
     /tmp/ccGMQ9mf.s:324    .text:00000000000002cc $t
     /tmp/ccGMQ9mf.s:373    .text:0000000000000310 $d
     /tmp/ccGMQ9mf.s:375    .text:0000000000000314 $t
     /tmp/ccGMQ9mf.s:407    .text:0000000000000344 $d
     /tmp/ccGMQ9mf.s:409    .text:0000000000000348 $t
     /tmp/ccGMQ9mf.s:432    .text:0000000000000368 $d
     /tmp/ccGMQ9mf.s:434    .text:000000000000036c $t
     /tmp/ccGMQ9mf.s:471    .text:00000000000003a8 $d
     /tmp/ccGMQ9mf.s:473    .text:00000000000003ac $t
     /tmp/ccGMQ9mf.s:503    .text:00000000000003dc $d
     /tmp/ccGMQ9mf.s:505    .text:00000000000003e0 $t
     /tmp/ccGMQ9mf.s:547    .text:0000000000000424 $d
     /tmp/ccGMQ9mf.s:549    .text:0000000000000428 $t
     /tmp/ccGMQ9mf.s:571    .text:0000000000000444 $d
     /tmp/ccGMQ9mf.s:573    .text:0000000000000448 $t
     /tmp/ccGMQ9mf.s:606    .text:000000000000047c $d
     /tmp/ccGMQ9mf.s:609    .text:0000000000000484 $t
     /tmp/ccGMQ9mf.s:662    .text:00000000000004e0 $d
     /tmp/ccGMQ9mf.s:1355   .bss:0000000000000034 g_msg_buffer
     /tmp/ccGMQ9mf.s:665    .text:00000000000004e8 $t
     /tmp/ccGMQ9mf.s:698    .text:000000000000051c $d
     /tmp/ccGMQ9mf.s:700    .text:0000000000000520 $t
     /tmp/ccGMQ9mf.s:750    .text:0000000000000578 $d
     /tmp/ccGMQ9mf.s:752    .text:000000000000057c $t
     /tmp/ccGMQ9mf.s:821    .text:0000000000000608 $d
     /tmp/ccGMQ9mf.s:823    .text:000000000000060c $t
     /tmp/ccGMQ9mf.s:882    .text:0000000000000670 $d
     /tmp/ccGMQ9mf.s:885    .text:0000000000000678 $t
     /tmp/ccGMQ9mf.s:923    .text:00000000000006b0 $d
     /tmp/ccGMQ9mf.s:925    .text:00000000000006b4 $t
     /tmp/ccGMQ9mf.s:1097   .text:00000000000007dc $d
     /tmp/ccGMQ9mf.s:1099   .text:00000000000007e0 $t
     /tmp/ccGMQ9mf.s:1135   .text:000000000000081c $d
     /tmp/ccGMQ9mf.s:1139   .text.startup:0000000000000000 $t
     /tmp/ccGMQ9mf.s:1147   .text.startup:0000000000000000 main
     /tmp/ccGMQ9mf.s:1169   .text.startup:0000000000000028 $d
     /tmp/ccGMQ9mf.s:1172   .text:0000000000000824 $t
     /tmp/ccGMQ9mf.s:1180   .text:0000000000000824 serial_error
     /tmp/ccGMQ9mf.s:1194   .text:0000000000000828 HardFault_Handler
     /tmp/ccGMQ9mf.s:1214   .text:0000000000000838 MemManage_Handler
     /tmp/ccGMQ9mf.s:1234   .text:0000000000000848 BusFault_Handler
     /tmp/ccGMQ9mf.s:1254   .text:0000000000000858 UsageFault_Handler
     /tmp/ccGMQ9mf.s:1274   .text:0000000000000868 vApplicationMallocFailedHook
     /tmp/ccGMQ9mf.s:1294   .text:0000000000000878 vApplicationStackOverflowHook
     /tmp/ccGMQ9mf.s:1330   .text:00000000000008c4 $d
     /tmp/ccGMQ9mf.s:1333   .bss:0000000000000000 $d
     /tmp/ccGMQ9mf.s:1337   .bss:0000000000000000 g_actuators_queue
     /tmp/ccGMQ9mf.s:1341   .bss:0000000000000004 i.9822
     /tmp/ccGMQ9mf.s:1346   .bss:0000000000000008 info.9823
     /tmp/ccGMQ9mf.s:1350   .bss:0000000000000030 g_protocol_bussy
     /tmp/ccGMQ9mf.s:1358   .rodata.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
screen_image
hardware_glcds
uc1701_update
cli_init
comm_init
xQueueGenericCreate
xTaskGenericCreate
hardware_actuators
actuator_set_event
actuator_enable_event
protocol_add_command
naveg_init
vTaskDelete
mod_logo
mod_duo
hardware_leds
ledz_on
naveg_print_pb_name
naveg_master_volume
protocol_response
cli_restore
comm_webgui_response_cb
__aeabi_d2f
atof
atoi
screen_tuner
naveg_bank_config
naveg_initial_state
naveg_get_control
float_to_str
naveg_set_control
naveg_remove_control
data_parse_control
naveg_add_control
strcmp
naveg_ui_connection
str_to_hex
uc1701_draw_image
naveg_dialog
uc1701_text
ledz_set
ledz_blink
actuator_get_status
xQueueGenericSendFromISR
xQueueGenericSend
vPortYield
naveg_need_update
naveg_update
cli_process
xQueueGenericReceive
naveg_save_page
naveg_is_master_vol
naveg_toggle_tool
naveg_foot_change
naveg_enter
naveg_dec_control
naveg_up
naveg_inc_control
naveg_down
naveg_pot_change
comm_webgui_read
ringbuff_read_until
protocol_parse
hardware_setup
vTaskStartScheduler
uc1701_clear
